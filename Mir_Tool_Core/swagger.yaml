openapi: 3.0.1
info:
  title: 3.3.3 MIR250 REST API
  description: The REST API for the 3.3.3 interface of MIR250
  contact:
    email: support@mir-robots.com
  version: 3.3.3
servers:
- url: http://mir.com/api/v2.0.0
paths:
  /actions:
    get:
      tags:
      - Actions
      summary: GET /actions
      description: Retrieve the list of action definitions
      operationId: actions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAction_definitions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.actions_controller
  /actions/{action_type}:
    get:
      tags:
      - Actions
      summary: "GET /actions/{action_type}"
      description: Retrieve the details about the action. It displays the parameters
        of the action and the limits for the values among others
      operationId: actions_action_type_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: action_type
        in: path
        description: The action_type to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAction_definition'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.actions_controller
    post:
      tags:
      - Actions
      summary: "POST /actions/{action_type}"
      description: Add a new action definition with the specified action_type
      operationId: actions_action_type_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: action_type
        in: path
        description: The action_type to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the action_definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAction_definition'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAction_definition'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Action_definition
      x-openapi-router-controller: mir_robot_server.controllers.actions_controller
  /cart_calibrations:
    get:
      tags:
      - Cart_calibrations
      summary: GET /cart_calibrations
      description: Retrieve the list of cart calibrations
      operationId: cart_calibrations_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCart_calibrations'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.cart_calibrations_controller
    post:
      tags:
      - Cart_calibrations
      summary: POST /cart_calibrations
      description: Add a new cart calibration
      operationId: cart_calibrations_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the cart_calibrations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCart_calibrations'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_calibrations'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Cart_calibrations
      x-openapi-router-controller: mir_robot_server.controllers.cart_calibrations_controller
  /cart_calibrations/{guid}:
    get:
      tags:
      - Cart_calibrations
      summary: "GET /cart_calibrations/{guid}"
      description: Retrieve the details about the cart calibration with the specified
        GUID
      operationId: cart_calibrations_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_calibration'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.cart_calibrations_controller
    put:
      tags:
      - Cart_calibrations
      summary: "PUT /cart_calibrations/{guid}"
      description: Modify the values of the cart calibration with the specified GUID
      operationId: cart_calibrations_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the cart_calibration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCart_calibration'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_calibration'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Cart_calibration
      x-openapi-router-controller: mir_robot_server.controllers.cart_calibrations_controller
    delete:
      tags:
      - Cart_calibrations
      summary: "DELETE /cart_calibrations/{guid}"
      description: Erase the cart calibration with the specified GUID
      operationId: cart_calibrations_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.cart_calibrations_controller
  /cart_types:
    get:
      tags:
      - Cart_types
      summary: GET /cart_types
      description: Retrieve the list of cart types
      operationId: cart_types_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCart_types'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.cart_types_controller
    post:
      tags:
      - Cart_types
      summary: POST /cart_types
      description: Add a new cart type
      operationId: cart_types_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the cart_types
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCart_types'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_types'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Cart_types
      x-openapi-router-controller: mir_robot_server.controllers.cart_types_controller
  /cart_types/{guid}:
    get:
      tags:
      - Cart_types
      summary: "GET /cart_types/{guid}"
      description: Retrieve the details about the cart type with the specified GUID
      operationId: cart_types_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_type'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.cart_types_controller
    put:
      tags:
      - Cart_types
      summary: "PUT /cart_types/{guid}"
      description: Modify the values of the cart type with the specified GUID
      operationId: cart_types_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the cart_type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCart_type'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_type'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Cart_type
      x-openapi-router-controller: mir_robot_server.controllers.cart_types_controller
    delete:
      tags:
      - Cart_types
      summary: "DELETE /cart_types/{guid}"
      description: Erase the cart type with the specified GUID
      operationId: cart_types_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.cart_types_controller
  /carts:
    get:
      tags:
      - Carts
      summary: GET /carts
      description: Retrieve the list of carts
      operationId: carts_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCarts'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.carts_controller
    post:
      tags:
      - Carts
      summary: POST /carts
      description: Add a new cart
      operationId: carts_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the carts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCarts'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCarts'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Carts
      x-openapi-router-controller: mir_robot_server.controllers.carts_controller
  /carts/{guid}:
    get:
      tags:
      - Carts
      summary: "GET /carts/{guid}"
      description: Retrieve the details about the cart with the specified GUID
      operationId: carts_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.carts_controller
    put:
      tags:
      - Carts
      summary: "PUT /carts/{guid}"
      description: Modify the values of the cart with the specified GUID
      operationId: carts_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCart'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Cart
      x-openapi-router-controller: mir_robot_server.controllers.carts_controller
    delete:
      tags:
      - Carts
      summary: "DELETE /carts/{guid}"
      description: Erase the cart with the specified GUID
      operationId: carts_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.carts_controller
  /dashboards:
    get:
      tags:
      - Dashboards
      summary: GET /dashboards
      description: Retrieve the list of dashboards
      operationId: dashboards_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDashboards'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
    post:
      tags:
      - Dashboards
      summary: POST /dashboards
      description: Add a new dashboard
      operationId: dashboards_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the dashboards
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDashboards'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboards'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Dashboards
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
  /dashboards/{dashboard_id}/widgets:
    get:
      tags:
      - Dashboards
      - Widgets
      summary: "GET /dashboards/{dashboard_id}/widgets"
      description: Retrieve the list of widgets of the dashboard with the specified
        dashboard ID
      operationId: dashboards_dashboard_id_widgets_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: dashboard_id
        in: path
        description: The dashboard_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDashboard_widgets'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
    post:
      tags:
      - Dashboards
      - Widgets
      summary: "POST /dashboards/{dashboard_id}/widgets"
      description: Add a new widget to the dashboard with the specified dashboard
        ID
      operationId: dashboards_dashboard_id_widgets_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: dashboard_id
        in: path
        description: The dashboard_id to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the dashboard_widgets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDashboard_widgets'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard_widgets'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Dashboard_widgets
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
  /dashboards/{dashboard_id}/widgets/{guid}:
    get:
      tags:
      - Dashboards
      - Widgets
      summary: "GET /dashboards/{dashboard_id}/widgets/{guid}"
      description: Retrieve the details about the widget with the specified GUID in
        the dashboard with the specified dashboard ID
      operationId: dashboards_dashboard_id_widgets_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: dashboard_id
        in: path
        description: The dashboard_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard_widget'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
    put:
      tags:
      - Dashboards
      - Widgets
      summary: "PUT /dashboards/{dashboard_id}/widgets/{guid}"
      description: Modify the values of the widget with the specified GUID in the
        dashboard with the specified dashboard ID
      operationId: dashboards_dashboard_id_widgets_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: dashboard_id
        in: path
        description: The dashboard_id to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the dashboard_widget
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDashboard_widget'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard_widget'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Dashboard_widget
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
    delete:
      tags:
      - Dashboards
      - Widgets
      summary: "DELETE /dashboards/{dashboard_id}/widgets/{guid}"
      description: Erase the widget with the specified GUID from the dashboard with
        the specified dashboard ID
      operationId: dashboards_dashboard_id_widgets_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: dashboard_id
        in: path
        description: The dashboard_id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
  /dashboards/{guid}:
    get:
      tags:
      - Dashboards
      summary: "GET /dashboards/{guid}"
      description: Retrieve the details of the dashboard with the specified GUID
      operationId: dashboards_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
    put:
      tags:
      - Dashboards
      summary: "PUT /dashboards/{guid}"
      description: Modify the values of the dashboard with the specified GUID
      operationId: dashboards_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the dashboard
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDashboard'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Dashboard
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
    delete:
      tags:
      - Dashboards
      summary: "DELETE /dashboards/{guid}"
      description: Erase the dashboard with the specified GUID
      operationId: dashboards_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.dashboards_controller
  /docking_offsets:
    get:
      tags:
      - Docking_offsets
      summary: GET /docking_offsets
      description: Retrieve the list of docking offsets
      operationId: docking_offsets_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDocking_offsets'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
    post:
      tags:
      - Docking_offsets
      summary: POST /docking_offsets
      description: "Add a new docking offset. The only positions that can have docking\
        \ offsets are Charging stations, V markers and VL markers"
      operationId: docking_offsets_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the docking_offsets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDocking_offsets'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offsets'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Docking_offsets
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
  /docking_offsets/shelfs:
    get:
      tags:
      - Docking_offsets
      - Shelfs
      summary: GET /docking_offsets/shelfs
      description: Retrieve the list of docking offsets
      operationId: docking_offsets_shelfs_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDocking_offsets_no_pos'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
  /docking_offsets/types:
    get:
      tags:
      - Docking_offsets
      - Types
      summary: GET /docking_offsets/types
      description: Retrieve a list of possible position types
      operationId: docking_offsets_types_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDocking_offset_types'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
  /docking_offsets/types/{id}:
    get:
      tags:
      - Docking_offsets
      - Types
      summary: "GET /docking_offsets/types/{id}"
      description: Retrieve the details about the position type with the specified
        ID
      operationId: docking_offsets_types_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offset_type'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
  /docking_offsets/{guid}:
    get:
      tags:
      - Docking_offsets
      summary: "GET /docking_offsets/{guid}"
      description: Retrieve the details of the docking offset with the specified GUID
      operationId: docking_offsets_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offset'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
    put:
      tags:
      - Docking_offsets
      summary: "PUT /docking_offsets/{guid}"
      description: Modify the values of the docking offset with the specified GUID
      operationId: docking_offsets_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the docking_offset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDocking_offset'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offset'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Docking_offset
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
    delete:
      tags:
      - Docking_offsets
      summary: "DELETE /docking_offsets/{guid}"
      description: Erase the docking offset with the specified GUID
      operationId: docking_offsets_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.docking_offsets_controller
  /elevator_floors:
    get:
      tags:
      - Elevator_floors
      summary: GET /elevator_floors
      description: Retrieve the list of elevator floors in the fleet
      operationId: elevator_floors_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetElevator_floors'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.elevator_floors_controller
    post:
      tags:
      - Elevator_floors
      summary: POST /elevator_floors
      description: Add a new elevator floor to the fleet
      operationId: elevator_floors_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the elevator_floors
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostElevator_floors'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetElevator_floors'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Elevator_floors
      x-openapi-router-controller: mir_robot_server.controllers.elevator_floors_controller
  /elevator_floors/{guid}:
    get:
      tags:
      - Elevator_floors
      summary: "GET /elevator_floors/{guid}"
      description: Retrieve the details about the specified elevator floor
      operationId: elevator_floors_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetElevator_floor'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.elevator_floors_controller
    put:
      tags:
      - Elevator_floors
      summary: "PUT /elevator_floors/{guid}"
      description: Modify the values of the specified elevator floor
      operationId: elevator_floors_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the elevator_floor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutElevator_floor'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetElevator_floor'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Elevator_floor
      x-openapi-router-controller: mir_robot_server.controllers.elevator_floors_controller
    delete:
      tags:
      - Elevator_floors
      summary: "DELETE /elevator_floors/{guid}"
      description: Delete the specified elevator floor
      operationId: elevator_floors_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.elevator_floors_controller
  /elevators:
    get:
      tags:
      - Elevators
      summary: GET /elevators
      description: Retrieve a list of elevators in the fleet
      operationId: elevators_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetElevators'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.elevators_controller
    post:
      tags:
      - Elevators
      summary: POST /elevators
      description: Add a new elevator to the fleet
      operationId: elevators_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the elevators
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostElevators'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetElevators'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Elevators
      x-openapi-router-controller: mir_robot_server.controllers.elevators_controller
  /elevators/{guid}:
    get:
      tags:
      - Elevators
      summary: "GET /elevators/{guid}"
      description: Retrieve the details about the elevator with the specified guid
      operationId: elevators_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetElevator'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.elevators_controller
    put:
      tags:
      - Elevators
      summary: "PUT /elevators/{guid}"
      description: Modify the values of the elevator with the specified guid
      operationId: elevators_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the elevator
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutElevator'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetElevator'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Elevator
      x-openapi-router-controller: mir_robot_server.controllers.elevators_controller
    delete:
      tags:
      - Elevators
      summary: "DELETE /elevators/{guid}"
      description: Delete the elevator with the specified guid
      operationId: elevators_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.elevators_controller
  /experimental/diagnostics:
    get:
      tags:
      - Experimental
      - Diagnostics
      summary: GET /experimental/diagnostics
      description: Retrieve diagnostics status
      operationId: experimental_diagnostics_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiagnostics'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.experimental_controller
  /factory_reset:
    post:
      tags:
      - Factory_reset
      summary: POST /factory_reset
      description: Clean and migrate the database. Keep hardware configurations
      operationId: factory_reset_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the factory_reset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFactory_reset'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFactory_reset'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Factory_reset
      x-openapi-router-controller: mir_robot_server.controllers.factory_reset_controller
  /footprints:
    get:
      tags:
      - Footprints
      summary: GET /footprints
      description: Retrieve a list of footprints currently stored
      operationId: footprints_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFootprints'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.footprints_controller
    post:
      tags:
      - Footprints
      summary: POST /footprints
      description: Add new footprint to the database
      operationId: footprints_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the footprints
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFootprints'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFootprints'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Footprints
      x-openapi-router-controller: mir_robot_server.controllers.footprints_controller
  /footprints/{guid}:
    get:
      tags:
      - Footprints
      summary: "GET /footprints/{guid}"
      description: Retrieve information about a footprint with specified GUID
      operationId: footprints_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFootprint'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.footprints_controller
    put:
      tags:
      - Footprints
      summary: "PUT /footprints/{guid}"
      description: Modify a footprint with a specified GUID
      operationId: footprints_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the footprint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFootprint'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFootprint'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Footprint
      x-openapi-router-controller: mir_robot_server.controllers.footprints_controller
    delete:
      tags:
      - Footprints
      summary: "DELETE /footprints/{guid}"
      description: Delete with a specified GUID
      operationId: footprints_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.footprints_controller
  /hook/brake:
    get:
      tags:
      - Hook
      - Brake
      summary: GET /hook/brake
      description: Retrieve the state of the Hook brake
      operationId: hook_brake_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_brake'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
    put:
      tags:
      - Hook
      - Brake
      summary: PUT /hook/brake
      description: Activate or release the Hook brake
      operationId: hook_brake_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the hook_brake
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHook_brake'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_brake'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Hook_brake
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
  /hook/gripper:
    get:
      tags:
      - Hook
      - Gripper
      summary: GET /hook/gripper
      description: Retrieve the state of the Hook gripper
      operationId: hook_gripper_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_gripper'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
    put:
      tags:
      - Hook
      - Gripper
      summary: PUT /hook/gripper
      description: Open or close the Hook gripper
      operationId: hook_gripper_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the hook_gripper
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHook_gripper'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_gripper'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Hook_gripper
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
  /hook/height:
    get:
      tags:
      - Hook
      - Height
      summary: GET /hook/height
      description: Retrieve the height of the Hook
      operationId: hook_height_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_height'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
    put:
      tags:
      - Hook
      - Height
      summary: PUT /hook/height
      description: Modify the height of the Hook
      operationId: hook_height_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the hook_height
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHook_height'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_height'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Hook_height
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
  /hook/status:
    get:
      tags:
      - Hook
      - Status
      summary: GET /hook/status
      description: Retrieve the extended status of the Hook
      operationId: hook_status_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.hook_controller
  /hw/export:
    get:
      tags:
      - Hw
      - Export
      summary: GET /hw/export
      description: Download a file containing the hardware configuration of the robot
      operationId: hw_export_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHw_config_export'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.hw_controller
  /hw/import:
    post:
      tags:
      - Hw
      - Import
      summary: POST /hw/import
      description: Import the hardware configuration contained in the file into the
        robot
      operationId: hw_import_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the hw_config_import
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHw_config_import'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHw_config_import'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Hw_config_import
      x-openapi-router-controller: mir_robot_server.controllers.hw_controller
  /io_modules:
    get:
      tags:
      - Io_modules
      summary: GET /io_modules
      description: Retrieve the list of configured IO modules
      operationId: io_modules_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetIo_modules'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
    post:
      tags:
      - Io_modules
      summary: POST /io_modules
      description: Add a new IO module
      operationId: io_modules_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the io_modules
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIo_modules'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_modules'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Io_modules
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
  /io_modules/{guid}:
    get:
      tags:
      - Io_modules
      summary: "GET /io_modules/{guid}"
      description: Retrieve the details about a IO device with the specified GUID
      operationId: io_modules_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
    put:
      tags:
      - Io_modules
      summary: "PUT /io_modules/{guid}"
      description: Modify the values of the IO device with the specified GUID
      operationId: io_modules_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the io_module
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIo_module'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Io_module
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
    delete:
      tags:
      - Io_modules
      summary: "DELETE /io_modules/{guid}"
      description: Erase the IO device with the specified GUID
      operationId: io_modules_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
  /io_modules/{guid}/status:
    get:
      tags:
      - Io_modules
      - Status
      summary: "GET /io_modules/{guid}/status"
      description: Retrieve the status of the connection to the IO module with the
        specified GUID
      operationId: io_modules_guid_status_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module_status'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
    put:
      tags:
      - Io_modules
      - Status
      summary: "PUT /io_modules/{guid}/status"
      description: Modify the outputs of the connected IO module with specified GUID
      operationId: io_modules_guid_status_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the io_module_status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIo_module_status'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module_status'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Io_module_status
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
    post:
      tags:
      - Io_modules
      - Status
      summary: "POST /io_modules/{guid}/status"
      description: Connect to theIO module with the specified GUID
      operationId: io_modules_guid_status_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the io_module_status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIo_module_status'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module_status'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Io_module_status
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
    delete:
      tags:
      - Io_modules
      - Status
      summary: "DELETE /io_modules/{guid}/status"
      description: Disconnect from the IO module with the specified GUID
      operationId: io_modules_guid_status_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.io_modules_controller
  /log/error_reports:
    get:
      tags:
      - Log
      - Error_reports
      summary: GET /log/error_reports
      description: Retrieve the list of error reports
      operationId: log_error_reports_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_reports'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.log_controller
    post:
      tags:
      - Log
      - Error_reports
      summary: POST /log/error_reports
      description: Generate a new error report. This will record the 30s previous
        to this call in a file.
      operationId: log_error_reports_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the error_reports
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostError_reports'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_reports'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Error_reports
      x-openapi-router-controller: mir_robot_server.controllers.log_controller
    delete:
      tags:
      - Log
      - Error_reports
      summary: DELETE /log/error_reports
      description: Erase ALL the error reports
      operationId: log_error_reports_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.log_controller
  /log/error_reports/{id}:
    get:
      tags:
      - Log
      - Error_reports
      summary: "GET /log/error_reports/{id}"
      description: Retrieve the details about the error report with the specified
        ID
      operationId: log_error_reports_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_report'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.log_controller
    delete:
      tags:
      - Log
      - Error_reports
      summary: "DELETE /log/error_reports/{id}"
      description: Erase the error report with the specified ID
      operationId: log_error_reports_id_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.log_controller
  /log/error_reports/{id}/download:
    get:
      tags:
      - Log
      - Error_reports
      - Download
      summary: "GET /log/error_reports/{id}/download"
      description: Download the file containing the error report with the specified
        ID
      operationId: log_error_reports_id_download_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_report_download'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.log_controller
  /maps:
    get:
      tags:
      - Maps
      summary: GET /maps
      description: Retrieve the list of maps
      operationId: maps_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMaps'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    post:
      tags:
      - Maps
      summary: POST /maps
      description: Add a new map
      operationId: maps_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the maps
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMaps'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaps'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Maps
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/record:
    get:
      tags:
      - Maps
      - Record
      summary: GET /maps/record
      description: Retrive the latest recording of a map
      operationId: maps_record_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap_record'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    put:
      tags:
      - Maps
      - Record
      summary: PUT /maps/record
      description: Start and stop the recording of a map
      operationId: maps_record_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the map_record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMap_record'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap_record'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Map_record
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/uploads:
    get:
      tags:
      - Maps
      - Uploads
      summary: GET /maps/uploads
      description: Retrieve the list of map uploads
      operationId: maps_uploads_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMap_uploads'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    post:
      tags:
      - Maps
      - Uploads
      summary: POST /maps/uploads
      description: Upload a new map
      operationId: maps_uploads_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the map_uploads
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMap_uploads'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap_uploads'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Map_uploads
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/uploads/{guid}:
    get:
      tags:
      - Maps
      - Uploads
      summary: "GET /maps/uploads/{guid}"
      description: Fetch map upload
      operationId: maps_uploads_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap_upload'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    post:
      tags:
      - Maps
      - Uploads
      summary: "POST /maps/uploads/{guid}"
      description: Apply map upload
      operationId: maps_uploads_guid_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the map_upload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMap_upload'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap_upload'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Map_upload
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    delete:
      tags:
      - Maps
      - Uploads
      summary: "DELETE /maps/uploads/{guid}"
      description: Delete map upload
      operationId: maps_uploads_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/{guid}:
    get:
      tags:
      - Maps
      summary: "GET /maps/{guid}"
      description: Retrieve the details about the map with the specified GUID
      operationId: maps_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    put:
      tags:
      - Maps
      summary: "PUT /maps/{guid}"
      description: Modify the values of the map with the specified GUID
      operationId: maps_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the map
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMap'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Map
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
    delete:
      tags:
      - Maps
      summary: "DELETE /maps/{guid}"
      description: Erase the map with the specified GUID
      operationId: maps_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/{map_id}/path_guides:
    get:
      tags:
      - Maps
      - Path_guides
      summary: "GET /maps/{map_id}/path_guides"
      description: Retrieve the list of path guides that belong to the map with the
        specified map ID
      operationId: maps_map_id_path_guides_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: map_id
        in: path
        description: The map_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMap_path_guides'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/{map_id}/paths:
    get:
      tags:
      - Maps
      - Paths
      summary: "GET /maps/{map_id}/paths"
      description: Retrieve the list of paths that belong to the map with the specified
        map ID
      operationId: maps_map_id_paths_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: map_id
        in: path
        description: The map_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMap_paths'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/{map_id}/positions:
    get:
      tags:
      - Maps
      - Positions
      summary: "GET /maps/{map_id}/positions"
      description: Retrieve the list of positions that belong to the map with the
        specified map ID
      operationId: maps_map_id_positions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: map_id
        in: path
        description: The map_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMap_positions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /maps/{map_id}/zones:
    get:
      tags:
      - Maps
      - Zones
      summary: "GET /maps/{map_id}/zones"
      description: Retrieve the list of zones that belong to the map with the specified
        map ID
      operationId: maps_map_id_zones_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: map_id
        in: path
        description: The map_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMap_zone'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.maps_controller
  /metrics:
    get:
      tags:
      - Metrics
      summary: GET /metrics
      description: "Retrieve the latests MiR metrics related to the given MiR product\
        \ in the Prometheus or OpenMetrics text format. Default: OpenMetrics."
      operationId: metrics_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: Accept
        in: header
        description: The response content types accepted by the client
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: string
            default: application/openmetrics-text
            enum:
            - text/plain
            - application/openmetrics-text
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetMetrics'
            application/openmetrics-text:
              schema:
                $ref: '#/components/schemas/GetMetrics'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
            application/openmetrics-text:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
            application/openmetrics-text:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
            application/openmetrics-text:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.metrics_controller
  /mission_groups:
    get:
      tags:
      - Mission_groups
      summary: GET /mission_groups
      description: Retrieve the list of mission groups
      operationId: mission_groups_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMission_groups'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
    post:
      tags:
      - Mission_groups
      summary: POST /mission_groups
      description: Add a new mission group
      operationId: mission_groups_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the mission_groups
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMission_groups'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_groups'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission_groups
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
  /mission_groups/{group_id}/missions:
    get:
      tags:
      - Mission_groups
      - Missions
      summary: "GET /mission_groups/{group_id}/missions"
      description: Retrieve the list of missions that belong to the group with the
        specified group ID
      operationId: mission_groups_group_id_missions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: group_id
        in: path
        description: The group_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGroup_missions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
  /mission_groups/{guid}:
    get:
      tags:
      - Mission_groups
      summary: "GET /mission_groups/{guid}"
      description: Retrieve the details about the mission group with the specified
        GUID
      operationId: mission_groups_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_group'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
    put:
      tags:
      - Mission_groups
      summary: "PUT /mission_groups/{guid}"
      description: Modify the values of the mission group with the specified GUID
      operationId: mission_groups_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the mission_group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission_group'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_group'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission_group
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
    delete:
      tags:
      - Mission_groups
      summary: "DELETE /mission_groups/{guid}"
      description: Erase the mission group with the specified GUID
      operationId: mission_groups_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
  /mission_groups/{mission_group_id}/actions:
    get:
      tags:
      - Mission_groups
      - Actions
      summary: "GET /mission_groups/{mission_group_id}/actions"
      description: Retrieve the list of action definitions from the mission group
        with the specified mission group ID
      operationId: mission_groups_mission_group_id_actions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_group_id
        in: path
        description: The mission_group_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroup_action_definition'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_groups_controller
  /mission_queue:
    get:
      tags:
      - Mission_queue
      summary: GET /mission_queue
      description: "Retrieve the list of missions in the queue. Finished, failed,\
        \ pending and executing missions will be displayed here"
      operationId: mission_queue_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMission_queues'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
    post:
      tags:
      - Mission_queue
      summary: POST /mission_queue
      description: Add a new mission to the mission queue. The mission will always
        go to the end of the queue
      operationId: mission_queue_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the mission_queues
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMission_queues'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queues'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission_queues
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
    delete:
      tags:
      - Mission_queue
      summary: DELETE /mission_queue
      description: Abort all the pending and executing missions from the mission queue
      operationId: mission_queue_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
  /mission_queue/{id}:
    get:
      tags:
      - Mission_queue
      summary: "GET /mission_queue/{id}"
      description: Retrieve the details about the mission with the specified ID in
        the mission queue
      operationId: mission_queue_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
    put:
      tags:
      - Mission_queue
      summary: "PUT /mission_queue/{id}"
      description: Modify the values of the mission with the specified ID in the mission
        queue
      operationId: mission_queue_id_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: The new values of the mission_queue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission_queue'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission_queue
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
    delete:
      tags:
      - Mission_queue
      summary: "DELETE /mission_queue/{id}"
      description: Abort the mission with the specified ID in the mission queue
      operationId: mission_queue_id_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
  /mission_queue/{mission_queue_id}/actions:
    get:
      tags:
      - Mission_queue
      - Actions
      summary: "GET /mission_queue/{mission_queue_id}/actions"
      description: Retrieve the list of actions from the mission with the specified
        ID in the mission queue
      operationId: mission_queue_mission_queue_id_actions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_queue_id
        in: path
        description: The mission_queue_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue_actions'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
  /mission_queue/{mission_queue_id}/actions/{id}:
    get:
      tags:
      - Mission_queue
      - Actions
      summary: "GET /mission_queue/{mission_queue_id}/actions/{id}"
      description: Retrieve the details about the action with the specified ID from
        the mission with the specified ID in the mission queue
      operationId: mission_queue_mission_queue_id_actions_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_queue_id
        in: path
        description: The mission_queue_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue_action'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.mission_queue_controller
  /missions:
    get:
      tags:
      - Missions
      summary: GET /missions
      description: Retrieve the list of missions
      operationId: missions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMissions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
    post:
      tags:
      - Missions
      summary: POST /missions
      description: Add a new mission
      operationId: missions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the missions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMissions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMissions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Missions
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
  /missions/{guid}:
    get:
      tags:
      - Missions
      summary: "GET /missions/{guid}"
      description: Retrieve the details about the mission with the specified GUID
      operationId: missions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
    put:
      tags:
      - Missions
      summary: "PUT /missions/{guid}"
      description: Modify the values of the mission with the specified GUID
      operationId: missions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the mission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
    delete:
      tags:
      - Missions
      summary: "DELETE /missions/{guid}"
      description: Erase the mission with the specified GUID
      operationId: missions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
  /missions/{guid}/definition:
    get:
      tags:
      - Missions
      - Definition
      summary: "GET /missions/{guid}/definition"
      description: Retrieve the mission with the specified GUID as an action definition
        that can be inserted in another mission
      operationId: missions_guid_definition_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_definition'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
  /missions/{mission_id}/actions:
    get:
      tags:
      - Missions
      - Actions
      summary: "GET /missions/{mission_id}/actions"
      description: Retrieve the list of actions that belong to the mission with the
        specified mission ID
      operationId: missions_mission_id_actions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_id
        in: path
        description: The mission_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMission_actions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
    post:
      tags:
      - Missions
      - Actions
      summary: "POST /missions/{mission_id}/actions"
      description: Add a new action to the mission with the specified mission ID
      operationId: missions_mission_id_actions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_id
        in: path
        description: The mission_id to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the mission_actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMission_actions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_actions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission_actions
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
  /missions/{mission_id}/actions/{guid}:
    get:
      tags:
      - Missions
      - Actions
      summary: "GET /missions/{mission_id}/actions/{guid}"
      description: Retrieve the details about the action with the specified GUID that
        belongs to the mission with the specified mission ID
      operationId: missions_mission_id_actions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_id
        in: path
        description: The mission_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_action'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
    put:
      tags:
      - Missions
      - Actions
      summary: "PUT /missions/{mission_id}/actions/{guid}"
      description: Modify the values of the action with the specified GUID that belongs
        to the mission with the specified mission ID
      operationId: missions_mission_id_actions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_id
        in: path
        description: The mission_id to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the mission_action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission_action'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_action'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Mission_action
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
    delete:
      tags:
      - Missions
      - Actions
      summary: "DELETE /missions/{mission_id}/actions/{guid}"
      description: Erase the action with the specified GUID from the mission with
        the specified mission ID
      operationId: missions_mission_id_actions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: mission_id
        in: path
        description: The mission_id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.missions_controller
  /modbus:
    get:
      tags:
      - Modbus
      summary: GET /modbus
      description: Retrieve the modbus registers linked to actions
      operationId: modbus_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
  /modbus/missions:
    get:
      tags:
      - Modbus
      - Missions
      summary: GET /modbus/missions
      description: Retrieve the list of coils that can trigger a mission
      operationId: modbus_missions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetModbus_missions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
    post:
      tags:
      - Modbus
      - Missions
      summary: POST /modbus/missions
      description: Create a new link between a coil and a mission
      operationId: modbus_missions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the modbus_missions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostModbus_missions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus_missions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Modbus_missions
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
  /modbus/missions/{guid}:
    get:
      tags:
      - Modbus
      - Missions
      summary: "GET /modbus/missions/{guid}"
      description: Retrieve the details about the mission linked with the coil
      operationId: modbus_missions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus_mission'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
    put:
      tags:
      - Modbus
      - Missions
      summary: "PUT /modbus/missions/{guid}"
      description: Modify the values of the modbus mission with the specified ID
      operationId: modbus_missions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the modbus_mission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutModbus_mission'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus_mission'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Modbus_mission
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
    delete:
      tags:
      - Modbus
      - Missions
      summary: "DELETE /modbus/missions/{guid}"
      description: Delete the specified ID on the the modbus mission table
      operationId: modbus_missions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
  /modbus/{id}:
    get:
      tags:
      - Modbus
      summary: "GET /modbus/{id}"
      description: Retrieve the modbus registers linked to an action
      operationId: modbus_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbu'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.modbus_controller
  /path_guides:
    get:
      tags:
      - Path_guides
      summary: GET /path_guides
      description: Retrieve the list of path guides
      operationId: path_guides_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPath_guides'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
    post:
      tags:
      - Path_guides
      summary: POST /path_guides
      description: Add a new path guide
      operationId: path_guides_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the path_guides
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guides'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guides
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
  /path_guides/{guid}:
    get:
      tags:
      - Path_guides
      summary: "GET /path_guides/{guid}"
      description: Retrieve the path guide with the specified GUID
      operationId: path_guides_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
    put:
      tags:
      - Path_guides
      summary: "PUT /path_guides/{guid}"
      description: Modify the values of the path guide with the specified GUID
      operationId: path_guides_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the path_guide
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath_guide'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guide
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
    delete:
      tags:
      - Path_guides
      summary: "DELETE /path_guides/{guid}"
      description: Erase the path guide with the specified GUID
      operationId: path_guides_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
  /path_guides/{path_guide_guid}/options:
    get:
      tags:
      - Path_guides
      - Options
      summary: "GET /path_guides/{path_guide_guid}/options"
      description: Retrieve the list of allowed start/via/goal options for the selected
        path guide
      operationId: path_guides_path_guide_guid_options_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: path_guide_guid
        in: path
        description: The path_guide_guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_options'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
  /path_guides/{path_guide_guid}/positions:
    get:
      tags:
      - Path_guides
      - Positions
      summary: "GET /path_guides/{path_guide_guid}/positions"
      description: Retrieve the list of positions for the path guide with the specified
        GUID
      operationId: path_guides_path_guide_guid_positions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: path_guide_guid
        in: path
        description: The path_guide_guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPath_guide_positions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
    post:
      tags:
      - Path_guides
      - Positions
      summary: "POST /path_guides/{path_guide_guid}/positions"
      description: Add a new position to the path guide with the specified GUID
      operationId: path_guides_path_guide_guid_positions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: path_guide_guid
        in: path
        description: The path_guide_guid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the path_guide_positions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guide_positions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_positions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guide_positions
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
  /path_guides/{path_guide_guid}/positions/{guid}:
    get:
      tags:
      - Path_guides
      - Positions
      summary: "GET /path_guides/{path_guide_guid}/positions/{guid}"
      description: Retrieve the position with the specified GUID from the path guide
        with the specified path guide GUID
      operationId: path_guides_path_guide_guid_positions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: path_guide_guid
        in: path
        description: The path_guide_guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_position'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
    put:
      tags:
      - Path_guides
      - Positions
      summary: "PUT /path_guides/{path_guide_guid}/positions/{guid}"
      description: Modify the values of the position with the specified GUID from
        the path guide with the specified path guide GUID
      operationId: path_guides_path_guide_guid_positions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: path_guide_guid
        in: path
        description: The path_guide_guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the path_guide_position
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath_guide_position'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_position'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guide_position
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
    delete:
      tags:
      - Path_guides
      - Positions
      summary: "DELETE /path_guides/{path_guide_guid}/positions/{guid}"
      description: Erase the position with the specified GUID from the path guide
        with the specified path guide GUID
      operationId: path_guides_path_guide_guid_positions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: path_guide_guid
        in: path
        description: The path_guide_guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_controller
  /path_guides_positions:
    get:
      tags:
      - Path_guides_positions
      summary: GET /path_guides_positions
      description: Retrieve the list of positions used for path guides
      operationId: path_guides_positions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPath_guides_positions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_positions_controller
    post:
      tags:
      - Path_guides_positions
      summary: POST /path_guides_positions
      description: Add a new position in a path guide
      operationId: path_guides_positions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the path_guides_positions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guides_positions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_positions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guides_positions
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_positions_controller
  /path_guides_positions/{guid}:
    get:
      tags:
      - Path_guides_positions
      summary: "GET /path_guides_positions/{guid}"
      description: Retrieve the position for path guides with the specified GUID
      operationId: path_guides_positions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_position'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_positions_controller
    put:
      tags:
      - Path_guides_positions
      summary: "PUT /path_guides_positions/{guid}"
      description: Modify the values of the position for path guides with the specified
        GUID
      operationId: path_guides_positions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the path_guides_position
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath_guides_position'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_position'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guides_position
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_positions_controller
    delete:
      tags:
      - Path_guides_positions
      summary: "DELETE /path_guides_positions/{guid}"
      description: Erase the path guide position with the specified GUID
      operationId: path_guides_positions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_positions_controller
  /path_guides_precalc:
    get:
      tags:
      - Path_guides_precalc
      summary: GET /path_guides_precalc
      description: Retrieve the status of path guides precalculation
      operationId: path_guides_precalc_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_precalc'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_precalc_controller
    post:
      tags:
      - Path_guides_precalc
      summary: POST /path_guides_precalc
      description: Start/stop precalculation of the specified path guide
      operationId: path_guides_precalc_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the path_guides_precalc
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guides_precalc'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_precalc'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path_guides_precalc
      x-openapi-router-controller: mir_robot_server.controllers.path_guides_precalc_controller
  /paths:
    get:
      tags:
      - Paths
      summary: GET /paths
      description: Retrieve the list of paths
      operationId: paths_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPaths'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.paths_controller
    post:
      tags:
      - Paths
      summary: POST /paths
      description: Add a new path
      operationId: paths_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the paths
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaths'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaths'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Paths
      x-openapi-router-controller: mir_robot_server.controllers.paths_controller
  /paths/{guid}:
    get:
      tags:
      - Paths
      summary: "GET /paths/{guid}"
      description: Retrieve the path with the specified GUID
      operationId: paths_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.paths_controller
    put:
      tags:
      - Paths
      summary: "PUT /paths/{guid}"
      description: Modify the values of the path with the specified GUID
      operationId: paths_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the path
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Path
      x-openapi-router-controller: mir_robot_server.controllers.paths_controller
    delete:
      tags:
      - Paths
      summary: "DELETE /paths/{guid}"
      description: Erase the path with the specified GUID
      operationId: paths_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.paths_controller
  /permissions:
    get:
      tags:
      - Permissions
      summary: GET /permissions
      description: TODO
      operationId: permissions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPermissions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.permissions_controller
    post:
      tags:
      - Permissions
      summary: POST /permissions
      description: TODO
      operationId: permissions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the permissions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPermissions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Permissions
      x-openapi-router-controller: mir_robot_server.controllers.permissions_controller
  /permissions/{guid}:
    get:
      tags:
      - Permissions
      summary: "GET /permissions/{guid}"
      description: Retrieve the details about the permission with the specified GUID
      operationId: permissions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermission'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.permissions_controller
    delete:
      tags:
      - Permissions
      summary: "DELETE /permissions/{guid}"
      description: Erase the permission with the specified GUID
      operationId: permissions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.permissions_controller
  /platform/timezone:
    get:
      tags:
      - Platform
      - Timezone
      summary: GET /platform/timezone
      description: Gets the user set timezone
      operationId: platform_timezone_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimezone'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.platform_controller
    post:
      tags:
      - Platform
      - Timezone
      summary: POST /platform/timezone
      description: Sets the user timezone
      operationId: platform_timezone_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the timezone
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTimezone'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimezone'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Timezone
      x-openapi-router-controller: mir_robot_server.controllers.platform_controller
  /position_transition_lists:
    get:
      tags:
      - Position_transition_lists
      summary: GET /position_transition_lists
      description: Retrieve the list of position transition lists
      operationId: position_transition_lists_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_lists'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.position_transition_lists_controller
    post:
      tags:
      - Position_transition_lists
      summary: POST /position_transition_lists
      description: Add a new position transition list
      operationId: position_transition_lists_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the position_transition_lists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPosition_transition_lists'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_lists'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Position_transition_lists
      x-openapi-router-controller: mir_robot_server.controllers.position_transition_lists_controller
  /position_transition_lists/{guid}:
    get:
      tags:
      - Position_transition_lists
      summary: "GET /position_transition_lists/{guid}"
      description: Retrieve the details about the position transition list with the
        specified GUID
      operationId: position_transition_lists_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_list'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.position_transition_lists_controller
    put:
      tags:
      - Position_transition_lists
      summary: "PUT /position_transition_lists/{guid}"
      description: Modify the values of the position transition list with the specified
        GUID
      operationId: position_transition_lists_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the position_transition_list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPosition_transition_list'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_list'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Position_transition_list
      x-openapi-router-controller: mir_robot_server.controllers.position_transition_lists_controller
    delete:
      tags:
      - Position_transition_lists
      summary: "DELETE /position_transition_lists/{guid}"
      description: Erase the position transition list with the specified GUID
      operationId: position_transition_lists_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.position_transition_lists_controller
  /position_types:
    get:
      tags:
      - Position_types
      summary: GET /position_types
      description: Retrieve a list of possible position types
      operationId: position_types_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPosition_types'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.position_types_controller
  /position_types/{id}:
    get:
      tags:
      - Position_types
      summary: "GET /position_types/{id}"
      description: Retrieve the details about the position type with the specified
        ID
      operationId: position_types_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_type'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.position_types_controller
  /positions:
    get:
      tags:
      - Positions
      summary: GET /positions
      description: Retrieve the list of positions
      operationId: positions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPositions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
    post:
      tags:
      - Positions
      summary: POST /positions
      description: Add a new position
      operationId: positions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the positions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPositions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Positions
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
  /positions/{guid}:
    get:
      tags:
      - Positions
      summary: "GET /positions/{guid}"
      description: Retrieve the details about the position with the specified GUID
      operationId: positions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
    put:
      tags:
      - Positions
      summary: "PUT /positions/{guid}"
      description: Modify the values of the position with the specified GUID
      operationId: positions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the position
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPosition'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Position
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
    delete:
      tags:
      - Positions
      summary: "DELETE /positions/{guid}"
      description: Erase the position with the specified GUID
      operationId: positions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
  /positions/{parent_guid}/helper_positions:
    get:
      tags:
      - Positions
      - Helper_positions
      summary: "GET /positions/{parent_guid}/helper_positions"
      description: "Retrieve the list of helper positions for the position with the\
        \ specified parent GUID. Only Charging Stations, V markers, VL markers, Shelf\
        \ and Trolley positions have helper positions"
      operationId: positions_parent_guid_helper_positions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: parent_guid
        in: path
        description: The parent_guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHelper_positions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
  /positions/{pos_id}/docking_offsets:
    get:
      tags:
      - Positions
      - Docking_offsets
      summary: "GET /positions/{pos_id}/docking_offsets"
      description: Retrieve the details of the docking offset of the position with
        the specified position ID
      operationId: positions_pos_id_docking_offsets_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: pos_id
        in: path
        description: The pos_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPos_docking_offsets'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.positions_controller
  /registers:
    get:
      tags:
      - Registers
      summary: GET /registers
      description: Retrieve the list of PLC registers from the robot. Registers 1
        to 100 are integers and registers 101-200 are float
      operationId: registers_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRegisters'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.registers_controller
  /registers/{id}:
    get:
      tags:
      - Registers
      summary: "GET /registers/{id}"
      description: Retrieve the value of the PLC register with the specified ID. Registers
        1 to 100 are integers and registers 101-200 are float
      operationId: registers_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegister'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.registers_controller
    put:
      tags:
      - Registers
      summary: "PUT /registers/{id}"
      description: Modify the value of the PLC register with the specified ID
      operationId: registers_id_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegister'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.registers_controller
    post:
      tags:
      - Registers
      summary: "POST /registers/{id}"
      description: |-
        Modify the value of the PLC register with the specified ID. Registers 1 to 100 are integers and registers 101-200 are float.
        Even though this is not a standard use of the POST call it has been included for compatibility purposes
      operationId: registers_id_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: The details of the register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRegister'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegister'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Register
      x-openapi-router-controller: mir_robot_server.controllers.registers_controller
  /remote_support:
    get:
      tags:
      - Remote_support
      summary: GET /remote_support
      description: Retrieve the status of the remote support connection
      operationId: remote_support_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemote_support'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.remote_support_controller
    put:
      tags:
      - Remote_support
      summary: PUT /remote_support
      description: Modify the remote support connection timeout
      operationId: remote_support_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the remote_support
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRemote_support'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemote_support'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Remote_support
      x-openapi-router-controller: mir_robot_server.controllers.remote_support_controller
  /remote_support/log:
    get:
      tags:
      - Remote_support
      - Log
      summary: GET /remote_support/log
      description: Retrieve the list with the actions performed by the remote support
        controller
      operationId: remote_support_log_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemote_support_log'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.remote_support_controller
  /robots:
    post:
      tags:
      - Robots
      summary: POST /robots
      description: Add information about other robots in the world. This is used by
        the Fleet manager to avoid robot collisions
      operationId: robots_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the robots
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRobots'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRobots'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Robots
      x-openapi-router-controller: mir_robot_server.controllers.robots_controller
  /service_book:
    get:
      tags:
      - Service_book
      summary: GET /service_book
      description: Retrieve service book entries accessible by user
      operationId: service_book_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetService_books'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.service_book_controller
    post:
      tags:
      - Service_book
      summary: POST /service_book
      description: Add a service book note
      operationId: service_book_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the service_books
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostService_books'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetService_books'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Service_books
      x-openapi-router-controller: mir_robot_server.controllers.service_book_controller
  /service_book/{guid}:
    get:
      tags:
      - Service_book
      summary: "GET /service_book/{guid}"
      description: Retrieve note with the GUID
      operationId: service_book_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetService_book'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.service_book_controller
    delete:
      tags:
      - Service_book
      summary: "DELETE /service_book/{guid}"
      description: Erase the note with the specified GUID
      operationId: service_book_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.service_book_controller
  /sessions:
    get:
      tags:
      - Sessions
      summary: GET /sessions
      description: Retrieve the list of sessions
      operationId: sessions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSessions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
    post:
      tags:
      - Sessions
      summary: POST /sessions
      description: Add a new session
      operationId: sessions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the sessions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSessions'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessions'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Sessions
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/import:
    get:
      tags:
      - Sessions
      - Import
      summary: GET /sessions/import
      description: Get progress of the running import
      operationId: sessions_import_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession_import'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
    post:
      tags:
      - Sessions
      - Import
      summary: POST /sessions/import
      description: Import the session contained in the file
      operationId: sessions_import_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the session_import
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSession_import'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession_import'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Session_import
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
    delete:
      tags:
      - Sessions
      - Import
      summary: DELETE /sessions/import
      description: Cancel currently running import
      operationId: sessions_import_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{guid}:
    get:
      tags:
      - Sessions
      summary: "GET /sessions/{guid}"
      description: Retrieve the details about the session with the specified GUID
      operationId: sessions_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
    put:
      tags:
      - Sessions
      summary: "PUT /sessions/{guid}"
      description: Modify the values of the session with the specified GUID
      operationId: sessions_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSession'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Session
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
    delete:
      tags:
      - Sessions
      summary: "DELETE /sessions/{guid}"
      description: Erase the session with the specified GUID
      operationId: sessions_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{guid}/export:
    get:
      tags:
      - Sessions
      - Export
      summary: "GET /sessions/{guid}/export"
      description: Download a file containing the session with the specified GUID
      operationId: sessions_guid_export_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession_export'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{session_id}/elevator_floors:
    get:
      tags:
      - Sessions
      - Elevator_floors
      summary: "GET /sessions/{session_id}/elevator_floors"
      description: Retrieve the list of elevator floors that belong to the session
        with the specified session ID
      operationId: sessions_session_id_elevator_floors_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: session_id
        in: path
        description: The session_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSession_elevator_floors'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{session_id}/elevators:
    get:
      tags:
      - Sessions
      - Elevators
      summary: "GET /sessions/{session_id}/elevators"
      description: Retrieve the list of elevators that belong to the session with
        the specified session ID
      operationId: sessions_session_id_elevators_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: session_id
        in: path
        description: The session_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSession_elevators'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{session_id}/maps:
    get:
      tags:
      - Sessions
      - Maps
      summary: "GET /sessions/{session_id}/maps"
      description: Retrieve the list of maps that belong to the session with the specified
        session ID
      operationId: sessions_session_id_maps_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: session_id
        in: path
        description: The session_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSession_maps'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{session_id}/missions:
    get:
      tags:
      - Sessions
      - Missions
      summary: "GET /sessions/{session_id}/missions"
      description: Retrieve the list of missions that belong to the session with the
        specified session ID
      operationId: sessions_session_id_missions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: session_id
        in: path
        description: The session_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSession_missions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /sessions/{session_id}/position_transition_lists:
    get:
      tags:
      - Sessions
      - Position_transition_lists
      summary: "GET /sessions/{session_id}/position_transition_lists"
      description: Retrieve the list of position transition lists that belong to the
        session with the specified session ID
      operationId: sessions_session_id_position_transition_lists_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: session_id
        in: path
        description: The session_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_list_from_session'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sessions_controller
  /setting_groups:
    get:
      tags:
      - Setting_groups
      summary: GET /setting_groups
      description: Retrieve a list with the settings groups
      operationId: setting_groups_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetting_groups'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.setting_groups_controller
  /setting_groups/{id}:
    get:
      tags:
      - Setting_groups
      summary: "GET /setting_groups/{id}"
      description: Retrieve the details about the settings group with the specified
        ID
      operationId: setting_groups_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting_group'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.setting_groups_controller
  /setting_groups/{settings_group_id}/settings:
    get:
      tags:
      - Setting_groups
      - Settings
      summary: "GET /setting_groups/{settings_group_id}/settings"
      description: Retrieve the list of settings from the settings group with the
        specified settings group ID
      operationId: setting_groups_settings_group_id_settings_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: settings_group_id
        in: path
        description: The settings_group_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetting_group_settings'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.setting_groups_controller
  /setting_groups/{settings_group_id}/settings/advanced:
    get:
      tags:
      - Setting_groups
      - Settings
      - Advanced
      summary: "GET /setting_groups/{settings_group_id}/settings/advanced"
      description: Retrieve the list of advanced settings from the settings group
        with the specified settings group ID
      operationId: setting_groups_settings_group_id_settings_advanced_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: settings_group_id
        in: path
        description: The settings_group_id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetting_group_advanced_settings'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.setting_groups_controller
  /settings:
    get:
      tags:
      - Settings
      summary: GET /settings
      description: Retrieve a list with the settings
      operationId: settings_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSettings'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.settings_controller
  /settings/advanced:
    get:
      tags:
      - Settings
      - Advanced
      summary: GET /settings/advanced
      description: Retrieve the list with the advanced settings
      operationId: settings_advanced_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSettings_advanced'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.settings_controller
  /settings/advanced/{id}:
    get:
      tags:
      - Settings
      - Advanced
      summary: "GET /settings/advanced/{id}"
      description: Retrieve the details of the advanced setting with the specified
        ID
      operationId: settings_advanced_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting_advanced'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.settings_controller
    put:
      tags:
      - Settings
      - Advanced
      summary: "PUT /settings/advanced/{id}"
      description: Modify the values of the advanced setting with the specified ID
      operationId: settings_advanced_id_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the setting_advanced
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetting_advanced'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting_advanced'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Setting_advanced
      x-openapi-router-controller: mir_robot_server.controllers.settings_controller
  /settings/{id}:
    get:
      tags:
      - Settings
      summary: "GET /settings/{id}"
      description: Retrieve the details of the setting with the specified ID
      operationId: settings_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.settings_controller
    put:
      tags:
      - Settings
      summary: "PUT /settings/{id}"
      description: Modify the values of the setting with the specified ID
      operationId: settings_id_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the setting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetting'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Setting
      x-openapi-router-controller: mir_robot_server.controllers.settings_controller
  /software/backups:
    get:
      tags:
      - Software
      - Backups
      summary: GET /software/backups
      description: Retrieve the list with all the software backups
      operationId: software_backups_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSoftware_backups'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    post:
      tags:
      - Software
      - Backups
      summary: POST /software/backups
      description: Create a new software backup
      operationId: software_backups_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_backups'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/backups/{guid}:
    get:
      tags:
      - Software
      - Backups
      summary: "GET /software/backups/{guid}"
      description: Retrieve the details about the software backup with the specified
        GUID
      operationId: software_backups_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_backup'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    post:
      tags:
      - Software
      - Backups
      summary: "POST /software/backups/{guid}"
      description: "If it exists a software backup with the specified GUID it will\
        \ restore that backup. Otherwise, it will create a software backup with the\
        \ specified GUID"
      operationId: software_backups_guid_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_backup'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    delete:
      tags:
      - Software
      - Backups
      summary: "DELETE /software/backups/{guid}"
      description: Erase the software backup with the specified GUID
      operationId: software_backups_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/hook_interface:
    get:
      tags:
      - Software
      - Hook_interface
      summary: GET /software/hook_interface
      description: Retrieve the information about the hook software interface
      operationId: software_hook_interface_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_software_interface'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    post:
      tags:
      - Software
      - Hook_interface
      summary: POST /software/hook_interface
      description: Proceed with hook upgrade
      operationId: software_hook_interface_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the hook_software_interface
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHook_software_interface'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_software_interface'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Hook_software_interface
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/logs:
    get:
      tags:
      - Software
      - Logs
      summary: GET /software/logs
      description: Retrieve the list of software upgrade logs
      operationId: software_logs_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSoftware_logs'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/logs/{guid}:
    get:
      tags:
      - Software
      - Logs
      summary: "GET /software/logs/{guid}"
      description: Retrieve the details about the software upgrade log with the specified
        GUID
      operationId: software_logs_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_log'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/robot_peripherals_status:
    get:
      tags:
      - Software
      - Robot_peripherals_status
      summary: GET /software/robot_peripherals_status
      description: Retrieve information related to the peripherals running upgrade
        routines in the robot..
      operationId: software_robot_peripherals_status_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSoftware_robot_peripherals_status'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/system_status:
    get:
      tags:
      - Software
      - System_status
      summary: GET /software/system_status
      description: Retrieve information related to the upgrading system in the robot.
      operationId: software_system_status_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSoftware_system_status'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/upgrades:
    get:
      tags:
      - Software
      - Upgrades
      summary: GET /software/upgrades
      description: Retrieve a list of the software upgrade performed
      operationId: software_upgrades_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSoftware_upgrades'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    post:
      tags:
      - Software
      - Upgrades
      summary: POST /software/upgrades
      description: Upgrade with the provided upgrade file
      operationId: software_upgrades_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_upgrades'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /software/upgrades/{guid}:
    get:
      tags:
      - Software
      - Upgrades
      summary: "GET /software/upgrades/{guid}"
      description: Retrieve the details of the software upgrade with the specified
        GUID
      operationId: software_upgrades_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_upgrade'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    post:
      tags:
      - Software
      - Upgrades
      summary: "POST /software/upgrades/{guid}"
      description: Upgrade to the version of the upgrade file with the specified GUID
      operationId: software_upgrades_guid_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_upgrade'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
    delete:
      tags:
      - Software
      - Upgrades
      summary: "DELETE /software/upgrades/{guid}"
      description: Erase the upgrade file with the specified GUID
      operationId: software_upgrades_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.software_controller
  /sounds:
    get:
      tags:
      - Sounds
      summary: GET /sounds
      description: Retrieve the list of sounds
      operationId: sounds_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSounds'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sounds_controller
    post:
      tags:
      - Sounds
      summary: POST /sounds
      description: Add a new sound
      operationId: sounds_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the sounds
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSounds'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSounds'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Sounds
      x-openapi-router-controller: mir_robot_server.controllers.sounds_controller
  /sounds/{guid}:
    get:
      tags:
      - Sounds
      summary: "GET /sounds/{guid}"
      description: Retrieve the details about the sound with the specified GUID
      operationId: sounds_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSound'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sounds_controller
    put:
      tags:
      - Sounds
      summary: "PUT /sounds/{guid}"
      description: Modify the values of the sound with the specified GUID
      operationId: sounds_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the sound
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSound'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSound'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Sound
      x-openapi-router-controller: mir_robot_server.controllers.sounds_controller
    delete:
      tags:
      - Sounds
      summary: "DELETE /sounds/{guid}"
      description: Erase the sound with the specified GUID
      operationId: sounds_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sounds_controller
  /sounds/{guid}/stream:
    get:
      tags:
      - Sounds
      - Stream
      summary: "GET /sounds/{guid}/stream"
      description: Download the sound file of the sound with the specified GUID
      operationId: sounds_guid_stream_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSound_stream'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.sounds_controller
  /ssl/cert:
    post:
      tags:
      - Ssl
      - Cert
      summary: POST /ssl/cert
      description: Upload new certificate pair
      operationId: ssl_cert_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the cert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCert'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCert'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Cert
      x-openapi-router-controller: mir_robot_server.controllers.ssl_controller
    delete:
      tags:
      - Ssl
      - Cert
      summary: DELETE /ssl/cert
      description: Use default self-signed certificate
      operationId: ssl_cert_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.ssl_controller
  /statistics/distance:
    get:
      tags:
      - Statistics
      - Distance
      summary: GET /statistics/distance
      description: Retrieve the list with the distance driven by the robot at different
        dates and times
      operationId: statistics_distance_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDistance_statistics'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.statistics_controller
  /status:
    get:
      tags:
      - Status
      summary: GET /status
      description: Retrieve the status
      operationId: status_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatus'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.status_controller
    put:
      tags:
      - Status
      summary: PUT /status
      description: Modify the status
      operationId: status_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStatus'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatus'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Status
      x-openapi-router-controller: mir_robot_server.controllers.status_controller
  /swagger:
    get:
      tags:
      - Swagger
      summary: GET /swagger
      description: Retrieve the swagger definition of the API
      operationId: swagger_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSwagger_doc'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.swagger_controller
  /system/info:
    get:
      tags:
      - System
      - Info
      summary: GET /system/info
      description: "Retrieve the information about the system. It contains different\
        \ information like serial numbers of hardware components, MAC addresses of\
        \ network cards, etc..."
      operationId: system_info_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystem_info'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/protective_scan:
    get:
      tags:
      - System
      - Protective_scan
      summary: GET /system/protective_scan
      description: "Retrieve PNG image visualizing the laser scans near the robot,\
        \ including visualization of points in protective fields if supported."
      operationId: system_protective_scan_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProtective_scan'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/cameras:
    get:
      tags:
      - System
      - Setup
      - Cameras
      summary: GET /system/setup/cameras
      description: Retrieve the setup information about Cameras.
      operationId: system_setup_cameras_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetup_cameras'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
    put:
      tags:
      - System
      - Setup
      - Cameras
      summary: PUT /system/setup/cameras
      description: Modify camera settings
      operationId: system_setup_cameras_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the setup_cameras
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetup_cameras'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetup_cameras'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Setup_cameras
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/serial_devices:
    get:
      tags:
      - System
      - Setup
      - Serial_devices
      summary: GET /system/setup/serial_devices
      description: Retrieve the information about serial devices setup.
      operationId: system_setup_serial_devices_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetup_serial_devices'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/serial_devices/external_interfaces:
    get:
      tags:
      - System
      - Setup
      - Serial_devices
      - External_interfaces
      summary: GET /system/setup/serial_devices/external_interfaces
      description: Retrieve the setup information about FTDI adapters of external_interfaces.
      operationId: system_setup_serial_devices_external_interfaces_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetup_external_interface_serials'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
    put:
      tags:
      - System
      - Setup
      - Serial_devices
      - External_interfaces
      summary: PUT /system/setup/serial_devices/external_interfaces
      description: Modify external interface serials
      operationId: system_setup_serial_devices_external_interfaces_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the setup_external_interface_serials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetup_external_interface_serials'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetup_external_interface_serials'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Setup_external_interface_serials
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/serial_devices/lasers:
    get:
      tags:
      - System
      - Setup
      - Serial_devices
      - Lasers
      summary: GET /system/setup/serial_devices/lasers
      description: Retrieve the setup information about FTDI adapters of laser scanners.
      operationId: system_setup_serial_devices_lasers_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetup_laser_serials'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
    put:
      tags:
      - System
      - Setup
      - Serial_devices
      - Lasers
      summary: PUT /system/setup/serial_devices/lasers
      description: Modify laser serials
      operationId: system_setup_serial_devices_lasers_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the setup_laser_serials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetup_laser_serials'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetup_laser_serials'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Setup_laser_serials
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/serial_devices/motor_controllers:
    get:
      tags:
      - System
      - Setup
      - Serial_devices
      - Motor_controllers
      summary: GET /system/setup/serial_devices/motor_controllers
      description: Retrieve the setup information about FTDI adapters of motor controllers.
      operationId: system_setup_serial_devices_motor_controllers_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSetup_mc_serials'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
    put:
      tags:
      - System
      - Setup
      - Serial_devices
      - Motor_controllers
      summary: PUT /system/setup/serial_devices/motor_controllers
      description: Modify motor controller serials
      operationId: system_setup_serial_devices_motor_controllers_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the setup_mc_serials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetup_mc_serials'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetup_mc_serials'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Setup_mc_serials
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/serial_devices/{id}:
    get:
      tags:
      - System
      - Setup
      - Serial_devices
      summary: "GET /system/setup/serial_devices/{id}"
      description: Retrieve the information about serial devices setup.
      operationId: system_setup_serial_devices_id_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: id
        in: path
        description: The id to search for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetup_serial_device'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/sick_configs:
    get:
      tags:
      - System
      - Setup
      - Sick_configs
      summary: GET /system/setup/sick_configs
      description: Get configuration description of sick configuration file.
      operationId: system_setup_sick_configs_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSick_configs'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/sick_configs/{guid}:
    get:
      tags:
      - System
      - Setup
      - Sick_configs
      summary: "GET /system/setup/sick_configs/{guid}"
      description: Get configuration description of sick configuration file.
      operationId: system_setup_sick_configs_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSick_config'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /system/setup/sick_configs/{guid}/download:
    get:
      tags:
      - System
      - Setup
      - Sick_configs
      - Download
      summary: "GET /system/setup/sick_configs/{guid}/download"
      description: Download sick configuration file.
      operationId: system_setup_sick_configs_guid_download_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSick_config_download'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.system_controller
  /user_groups:
    get:
      tags:
      - User_groups
      summary: GET /user_groups
      description: Retrieve the list of user groups
      operationId: user_groups_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUser_groups'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
    post:
      tags:
      - User_groups
      summary: POST /user_groups
      description: Add a new user group
      operationId: user_groups_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the user_groups
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUser_groups'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_groups'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: User_groups
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
  /user_groups/{guid}:
    get:
      tags:
      - User_groups
      summary: "GET /user_groups/{guid}"
      description: Retrieve the details about the user group with the specified GUID
      operationId: user_groups_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_group'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
    put:
      tags:
      - User_groups
      summary: "PUT /user_groups/{guid}"
      description: Modify the values of the user group with the specified GUID
      operationId: user_groups_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the user_group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUser_group'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_group'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: User_group
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
    delete:
      tags:
      - User_groups
      summary: "DELETE /user_groups/{guid}"
      description: Erase the user group with the specified GUID
      operationId: user_groups_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
  /user_groups/{user_group_guid}/permissions:
    get:
      tags:
      - User_groups
      - Permissions
      summary: "GET /user_groups/{user_group_guid}/permissions"
      description: Retrieve the list of permissions of the user group with the specified
        group GUID
      operationId: user_groups_user_group_guid_permissions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: user_group_guid
        in: path
        description: The user_group_guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUser_group_permission'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
    post:
      tags:
      - User_groups
      - Permissions
      summary: "POST /user_groups/{user_group_guid}/permissions"
      description: Add a new permission to the group with the specified group GUID
      operationId: user_groups_user_group_guid_permissions_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: user_group_guid
        in: path
        description: The user_group_guid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the user_group_permission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUser_group_permission'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_group_permission'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: User_group_permission
      x-openapi-router-controller: mir_robot_server.controllers.user_groups_controller
  /users:
    get:
      tags:
      - Users
      summary: GET /users
      description: Retrieve the list of users
      operationId: users_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUsers'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
    post:
      tags:
      - Users
      summary: POST /users
      description: Add a new user
      operationId: users_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsers'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsers'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Users
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
  /users/auth:
    post:
      tags:
      - Users
      - Auth
      summary: POST /users/auth
      description: Login with user credentials
      operationId: users_auth_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsers_auth'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
    delete:
      tags:
      - Users
      - Auth
      summary: DELETE /users/auth
      description: Logout user
      operationId: users_auth_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
  /users/me:
    get:
      tags:
      - Users
      - Me
      summary: GET /users/me
      description: Retrieve the details about the user currently authorized in the
        API
      operationId: users_me_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMe'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
    put:
      tags:
      - Users
      - Me
      summary: PUT /users/me
      description: Modify the values of the user currently authorized in the API
      operationId: users_me_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The new values of the me
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMe'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMe'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Me
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
  /users/me/group:
    get:
      tags:
      - Users
      - Me
      - Group
      summary: GET /users/me/group
      description: Retrieve the group of the user currently authorized in the API
      operationId: users_me_group_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUser_me_group'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
  /users/me/permissions:
    get:
      tags:
      - Users
      - Me
      - Permissions
      summary: GET /users/me/permissions
      description: Retrieve the permission of the user currently authorized in the
        API
      operationId: users_me_permissions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUser_me_permissions'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
  /users/{guid}:
    get:
      tags:
      - Users
      summary: "GET /users/{guid}"
      description: Retrieve the details about the user with the specified GUID
      operationId: users_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
    put:
      tags:
      - Users
      summary: "PUT /users/{guid}"
      description: Modify the values of the user with the specified GUID
      operationId: users_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUser'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: User
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
    delete:
      tags:
      - Users
      summary: "DELETE /users/{guid}"
      description: Erase the user with the specified GUID
      operationId: users_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.users_controller
  /wifi:
    get:
      tags:
      - Wifi
      summary: GET /wifi
      description: Retrive the list of WIFI API endpoints.
      operationId: wifi_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_api'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
  /wifi/connections:
    get:
      tags:
      - Wifi
      - Connections
      summary: GET /wifi/connections
      description: Retrieve the list of WiFi networks already configured
      operationId: wifi_connections_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetWifi_connections'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
    post:
      tags:
      - Wifi
      - Connections
      summary: POST /wifi/connections
      description: Add a new WiFi network configuration
      operationId: wifi_connections_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the wifi_connections
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWifi_connections'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_connections'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Wifi_connections
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
  /wifi/connections/{uuid}:
    get:
      tags:
      - Wifi
      - Connections
      summary: "GET /wifi/connections/{uuid}"
      description: Retrieve the details about the WiFi network configuration with
        the specified UUID
      operationId: wifi_connections_uuid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: uuid
        in: path
        description: The uuid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_connection'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
    post:
      tags:
      - Wifi
      - Connections
      summary: "POST /wifi/connections/{uuid}"
      description: Connect to the network with the specified UUID
      operationId: wifi_connections_uuid_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: uuid
        in: path
        description: The uuid to add the new resource to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The details of the wifi_connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWifi_connection'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_connection'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Wifi_connection
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
    delete:
      tags:
      - Wifi
      - Connections
      summary: "DELETE /wifi/connections/{uuid}"
      description: Erase the WiFi network configuration with the specified UUID
      operationId: wifi_connections_uuid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: uuid
        in: path
        description: The uuid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
  /wifi/networks:
    get:
      tags:
      - Wifi
      - Networks
      summary: GET /wifi/networks
      description: Retrieve the list of WiFi networks available for the robot to connect
      operationId: wifi_networks_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetWifi_networks'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
  /wifi/networks/{guid}:
    get:
      tags:
      - Wifi
      - Networks
      summary: "GET /wifi/networks/{guid}"
      description: Retrieve the details about the WiFi network with the specified
        GUID
      operationId: wifi_networks_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_network'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.wifi_controller
  /world_model:
    get:
      tags:
      - World_model
      summary: GET /world_model
      description: Retrieve the information about the needed resources from the robot
      operationId: world_model_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorld_model'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.world_model_controller
    post:
      tags:
      - World_model
      summary: POST /world_model
      description: "Upload the world model with the existing robots, resources and\
        \ positions and their respective locks"
      operationId: world_model_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the world_model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWorld_model'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorld_model'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: World_model
      x-openapi-router-controller: mir_robot_server.controllers.world_model_controller
  /zones:
    get:
      tags:
      - Zones
      summary: GET /zones
      description: Retrieve the list of zones
      operationId: zones_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieved the list of elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetZones'
                x-content-type: application/json
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
    post:
      tags:
      - Zones
      summary: POST /zones
      description: Add a new zone
      operationId: zones_post
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      requestBody:
        description: The details of the zones
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostZones'
        required: true
      responses:
        "201":
          description: The element has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZones'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Duplicate entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Zones
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
  /zones/action_definitions:
    get:
      tags:
      - Zones
      - Action_definitions
      summary: GET /zones/action_definitions
      description: Retrieve definitions of zone actions and their parameters
      operationId: zones_action_definitions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZone_action_definitions'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
  /zones/action_definitions/{action_type}:
    get:
      tags:
      - Zones
      - Action_definitions
      summary: "GET /zones/action_definitions/{action_type}"
      description: Retrieve the details about the action. It displays the parameters
        of the action and the limits for the values among others
      operationId: zones_action_definitions_action_type_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: action_type
        in: path
        description: The action_type to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZone_action_definition'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
  /zones/definitions:
    get:
      tags:
      - Zones
      - Definitions
      summary: GET /zones/definitions
      description: Retrieve definitions of zones and their actions
      operationId: zones_definitions_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZones_definitions'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
  /zones/{guid}:
    get:
      tags:
      - Zones
      summary: "GET /zones/{guid}"
      description: Retrieve the details about the zone with the specified GUID
      operationId: zones_guid_get
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to search for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieve the specified element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZone'
        "400":
          description: Wrong output fields or Invalid filters or Invalid ordering
            or Invalid limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
    put:
      tags:
      - Zones
      summary: "PUT /zones/{guid}"
      description: Modify the values of the zone with the specified GUID
      operationId: zones_guid_put
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new values of the zone
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutZone'
        required: true
      responses:
        "200":
          description: The element has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZone'
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Zone
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
    delete:
      tags:
      - Zones
      summary: "DELETE /zones/{guid}"
      description: Erase the zone with the specified GUID
      operationId: zones_guid_delete
      parameters:
      - name: Authorization
        in: header
        description: Authorization header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
      - name: Accept_Language
        in: header
        description: Language header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: en_US
          enum:
          - en_US
          - de_DE
          - es_ES
          - da_DK
          - zh_CN
      - name: guid
        in: path
        description: The guid to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The element has been deleted successfully
          content: {}
        "400":
          description: Bad request or Argument error or Invalid JSON or Missing content
            type application/json on the header or No fields or Invalid filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: mir_robot_server.controllers.zones_controller
components:
  schemas:
    Error:
      type: object
      properties:
        error_code:
          type: string
          description: The error in machine format
        error_human:
          type: string
          description: The error in human friendly format
    GetAction_definition:
      type: object
      properties:
        action_type:
          type: string
          description: ""
        description:
          type: string
          description: ""
        descriptions:
          type: array
          description: ""
          items:
            type: string
        help:
          type: string
          description: ""
        mission_group_id:
          type: string
          description: ""
        name:
          type: string
          description: ""
        parameters:
          type: array
          description: ""
          items:
            type: object
            properties: {}
            example: {}
      example:
        help: help
        action_type: action_type
        name: name
        description: description
        descriptions:
        - descriptions
        - descriptions
        parameters:
        - {}
        - {}
        mission_group_id: mission_group_id
    GetAction_definitions:
      type: object
      properties:
        action_type:
          type: string
          description: ""
        url:
          type: string
          description: ""
      example:
        action_type: action_type
        url: url
    GetCart:
      type: object
      properties:
        cart_calibration:
          type: string
          description: The url to the calibration of this cart
        cart_calibration_id:
          type: string
          description: The id of the calibration for this cart has
        cart_type:
          type: string
          description: The url to the type of this cart
        cart_type_id:
          type: string
          description: The id of the type of this cart
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
        name:
          type: string
          description: The name of the cart
      example:
        cart_type_id: cart_type_id
        name: name
        cart_calibration: cart_calibration
        guid: guid
        cart_calibration_id: cart_calibration_id
        cart_type: cart_type
        created_by_id: created_by_id
        created_by: created_by
    GetCart_calibration:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        drive_height:
          type: integer
          description: The height of the hook when driving with carts of this cart
            calibration
        entry_height:
          type: integer
          description: The entry height of the hook for the cart calibration
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
            calibration
        lock_height:
          type: integer
          description: The lock height of the hook for the cart calibration
        name:
          type: string
          description: The name of the cart calibration
        qw:
          type: number
          description: The qw quaternion of the cart calibration
          format: float
        qx:
          type: number
          description: The qx quaternion of the cart calibration
          format: float
        qy:
          type: number
          description: The qy quaternion of the cart calibration
          format: float
        qz:
          type: number
          description: The qz quaternion of the cart calibration
          format: float
        standard:
          type: boolean
          description: If the cart calibration is standard or not
        x:
          type: number
          description: The offset in the x-coordinate of the cart calibration
          format: float
        "y":
          type: number
          description: The offset in the y-coordinate of the cart calibration
          format: float
        z:
          type: number
          description: The offset in the z-coordinate of the cart calibration
          format: float
      example:
        standard: true
        entry_height: 6
        qw: 5.962134
        qx: 5.637377
        qy: 2.302136
        qz: 7.0614014
        lock_height: 1
        created_by: created_by
        name: name
        x: 9.301444
        guid: guid
        "y": 3.6160767
        drive_height: 0
        z: 2.027123
        created_by_id: created_by_id
    GetCart_calibrations:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
            calibration
        name:
          type: string
          description: The name of the cart calibration
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetCart_type:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
            type
        height:
          type: number
          description: The height of carts of this type
          format: float
        length:
          type: number
          description: The length of carts of this type
          format: float
        name:
          type: string
          description: The name of the cart type
        offset_locked_wheels:
          type: number
          description: The offset from the center of the robot to the locked wheels
            of carts of this type
          format: float
        width:
          type: number
          description: The width of carts of this type
          format: float
      example:
        offset_locked_wheels: 1.4658129
        length: 6.0274563
        name: name
        width: 5.962134
        guid: guid
        created_by_id: created_by_id
        created_by: created_by
        height: 0.8008282
    GetCart_types:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
            type
        name:
          type: string
          description: The name of the cart type
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetCarts:
      type: object
      properties:
        cart_calibration:
          type: string
          description: The url to the calibration of this cart
        cart_type:
          type: string
          description: The url to the type of this cart
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
        name:
          type: string
          description: The name of the cart
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        cart_calibration: cart_calibration
        guid: guid
        cart_type: cart_type
        url: url
    GetCert:
      type: object
    GetDashboard:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the user that created the dashboard
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        fleet_dashboard:
          type: boolean
          description: ""
        guid:
          type: string
          description: The global id unique across robots that identifies this dashboard
        name:
          type: string
          description: The name of this dashboard
        widgets:
          type: string
          description: The url to the possible widgets. if the dashboard does not
            have any widgets then this field is empty
      example:
        fleet_dashboard: true
        name: name
        guid: guid
        created_by_id: created_by_id
        widgets: widgets
        created_by: created_by
    GetDashboard_widget:
      type: object
      properties:
        created_by_id:
          type: string
          description: User guid of the user of the dashboard which the widget belongs
            to
        dashboard:
          type: string
          description: 'The url to the dashboard where this widget belongs. '
        dashboard_id:
          type: string
          description: The guid of the dashboard this widget belongs to
        guid:
          type: string
          description: The global id unique across robots that identifies this widget
        settings:
          type: string
          description: Widgets configuration encoded base 64 in json
      example:
        settings: settings
        guid: guid
        created_by_id: created_by_id
        dashboard: dashboard
        dashboard_id: dashboard_id
    GetDashboard_widgets:
      type: object
      properties:
        dashboard_id:
          type: string
          description: The guid of the dashboard this widget belongs to
        guid:
          type: string
          description: The global id unique across robots that identifies this widget
        url:
          type: string
          description: The URL of the resource
      example:
        guid: guid
        url: url
        dashboard_id: dashboard_id
    GetDashboards:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this dashboard
        name:
          type: string
          description: The name of this dashboard
        url:
          type: string
          description: The URL of the resource
        widgets:
          type: string
          description: The url to the possible widgets. if the dashboard does not
            have any widgets then this field is empty
      example:
        name: name
        guid: guid
        widgets: widgets
        url: url
    GetDiagnostics:
      type: object
    GetDistance_statistics:
      type: object
      properties:
        date:
          type: string
          description: ""
          format: date-time
        distance:
          type: number
          description: ""
          format: float
      example:
        date: 2000-01-23T04:56:07.000+00:00
        distance: 0.8008282
    GetDocking_offset:
      type: object
      properties:
        bar_distance:
          type: number
          description: The width of the bars for bar_markers
          format: float
        bar_length:
          type: number
          description: The length of the bars for bar_markers
          format: float
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        docking_type:
          type: integer
          description: The docking type of the marker.
        guid:
          type: string
          description: The global id unique across robots that identifies this docking
            offset
        name:
          type: string
          description: The name of the docking offset. used for docking offset independent
            from positions.
        orientation_offset:
          type: number
          description: The orientation offset with respect to the docking marker
          format: float
        pos_id:
          type: string
          description: The global id refering to the position that this offset belongs
            to
        position:
          type: string
          description: The url to the position
        shelf_leg_asymmetry_x:
          type: number
          description: The asymmetry of the shelf legs in the x direction with respect
            to the shelf legs marker
          format: float
        x_offset:
          type: number
          description: The x-offset with respect to the docking marker
          format: float
        y_offset:
          type: number
          description: The y-offset with respect to the docking marker
          format: float
      example:
        shelf_leg_asymmetry_x: 5.637377
        docking_type: 1
        y_offset: 7.0614014
        created_by: created_by
        x_offset: 2.302136
        bar_distance: 0.8008282
        pos_id: pos_id
        name: name
        guid: guid
        orientation_offset: 5.962134
        created_by_id: created_by_id
        position: position
        bar_length: 6.0274563
    GetDocking_offset_type:
      type: object
      properties:
        id:
          type: integer
          description: The global id unique across robots that identifies this docking
            offset
        name:
          type: string
          description: The name of the docking offset. used for docking offset independent
            from positions.
      example:
        name: name
        id: 0
    GetDocking_offset_types:
      type: object
      properties:
        id:
          type: integer
          description: The global id unique across robots that identifies this docking
            offset
        name:
          type: string
          description: The name of the docking offset. used for docking offset independent
            from positions.
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        id: 0
        url: url
    GetDocking_offsets:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this docking
            offset
        name:
          type: string
          description: The name of the docking offset. used for docking offset independent
            from positions.
        position:
          type: string
          description: The url to the position
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        position: position
        url: url
    GetDocking_offsets_no_pos:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this docking
            offset
        name:
          type: string
          description: The name of the docking offset. used for docking offset independent
            from positions.
        position:
          type: string
          description: The url to the position
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        position: position
        url: url
    GetElevator:
      type: object
      properties:
        active:
          type: boolean
          description: Boolean indicating the state of the elevator
        authentication:
          type: string
          description: Authentication type for the opcua server
        created_by:
          type: string
          description: The url to the description of this elevator
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        driver:
          type: string
          description: Driver used to connect to the elevator server
        elevator_namespace:
          type: string
          description: Namespace under which the elevator is available on the opcua
            server
        guid:
          type: string
          description: The global id unique across robots that identifies this elevator
        ip:
          type: string
          description: The ip of the elevator
        name:
          type: string
          description: The name of the elevator
        one_way:
          type: integer
          description: "Integer indicating, if the elevator is one_way only, and in\
            \ which direction"
        password:
          type: string
          description: Password for the opcua server
        port:
          type: integer
          description: Port on which the serer ir running
        security_policy:
          type: string
          description: Security policy type for the opcua server
        session_guid:
          type: string
          description: The global id unique across robots containing this elevator
        turn_in_place:
          type: boolean
          description: Boolean indicating if the robot can turn in the elevator
        username:
          type: string
          description: Username for the opcua server
      example:
        session_guid: session_guid
        security_policy: security_policy
        ip: ip
        active: true
        created_by: created_by
        password: password
        turn_in_place: true
        one_way: 0
        driver: driver
        port: 6
        elevator_namespace: elevator_namespace
        name: name
        guid: guid
        created_by_id: created_by_id
        authentication: authentication
        username: username
    GetElevator_floor:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description this elevator floor
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        door:
          type: integer
          description: The integer identifying the door used by the elevator on this
            floor
        elevator_entry_pos:
          type: string
          description: ""
        elevator_entry_pos_guid:
          type: string
          description: The id of the position located in front of the elevator
        elevator_guid:
          type: string
          description: The global unique id of the elevator associated with this floor
        elevator_pos:
          type: string
          description: ""
        elevator_pos_guid:
          type: string
          description: The id of the position located in the elevator
        entry_mission:
          type: string
          description: ""
        entry_mission_guid:
          type: string
          description: The id of the entry mission
        exit_mission:
          type: string
          description: ""
        exit_mission_guid:
          type: string
          description: The id of the exit mission
        floor:
          type: integer
          description: The integer identifying the floor
        guid:
          type: string
          description: The global id unique across robots that identifies this elevator
            floor
        map:
          type: string
          description: ""
        map_guid:
          type: string
          description: The map id associated with the floor
        session_guid:
          type: string
          description: The global id unique across robots containing this elevator
      example:
        entry_mission_guid: entry_mission_guid
        exit_mission_guid: exit_mission_guid
        session_guid: session_guid
        door: 0
        elevator_pos_guid: elevator_pos_guid
        map_guid: map_guid
        created_by: created_by
        elevator_entry_pos_guid: elevator_entry_pos_guid
        elevator_guid: elevator_guid
        exit_mission: exit_mission
        elevator_entry_pos: elevator_entry_pos
        guid: guid
        created_by_id: created_by_id
        elevator_pos: elevator_pos
        floor: 6
        entry_mission: entry_mission
        map: map
    GetElevator_floors:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this elevator
            floor
        map:
          type: string
          description: ""
        map_guid:
          type: string
          description: The map id associated with the floor
        url:
          type: string
          description: The URL of the resource
      example:
        guid: guid
        map_guid: map_guid
        map: map
        url: url
    GetElevators:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this elevator
        name:
          type: string
          description: The name of the elevator
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetError_report:
      type: object
      properties:
        description:
          type: string
          description: ""
        download_url:
          type: string
          description: The url from where the bag can be downloaded
        generating:
          type: boolean
          description: Indicates whether the error log creation is running or not
        id:
          type: integer
          description: Id of the autobag
        module:
          type: string
          description: The module that created the autolog
        ready:
          type: boolean
          description: Status of the rosbag
        time:
          type: string
          description: The time where the autolog was created
          format: date-time
      example:
        ready: true
        module: module
        download_url: download_url
        description: description
        generating: true
        id: 0
        time: 2000-01-23T04:56:07.000+00:00
    GetError_report_download:
      type: object
    GetError_reports:
      type: object
      properties:
        description:
          type: string
          description: ""
        download_url:
          type: string
          description: The url from where the bag can be downloaded
        generating:
          type: boolean
          description: Indicates whether the error log creation is running or not
        id:
          type: integer
          description: Id of the autobag
        module:
          type: string
          description: The module that created the autolog
        ready:
          type: boolean
          description: Status of the rosbag
        time:
          type: string
          description: The time where the autolog was created
          format: date-time
      example:
        ready: true
        module: module
        download_url: download_url
        description: description
        generating: true
        id: 0
        time: 2000-01-23T04:56:07.000+00:00
    GetFactory_reset:
      type: object
    GetFootprint:
      type: object
      properties:
        config_id:
          type: string
          description: The model name of the product for which the footprint is created
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        custom:
          type: boolean
          description: Custom or rectangular footprint
        footprint_points:
          type: string
          description: The string defining the points in xy of the footprint
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
            type
        height:
          type: number
          description: The height of this footprint
          format: float
        hook:
          type: boolean
          description: If the footprint is for a hook or not
        name:
          type: string
          description: The name of the footprint type
      example:
        hook: true
        config_id: config_id
        footprint_points: footprint_points
        custom: true
        name: name
        guid: guid
        created_by_id: created_by_id
        height: 0.8008282
    GetFootprints:
      type: object
      properties:
        config_id:
          type: string
          description: The model name of the product for which the footprint is created
        guid:
          type: string
          description: The global id unique across robots that identifies this cart
            type
        name:
          type: string
          description: The name of the footprint type
        url:
          type: string
          description: The URL of the resource
      example:
        config_id: config_id
        name: name
        guid: guid
        url: url
    GetGroup_action_definition:
      type: object
      properties:
        action_type:
          type: string
          description: ""
        description:
          type: string
          description: ""
        descriptions:
          type: array
          description: ""
          items:
            type: string
        help:
          type: string
          description: ""
        mission_group_id:
          type: string
          description: ""
        name:
          type: string
          description: ""
        parameters:
          type: array
          description: ""
          items:
            type: object
            properties: {}
            example: {}
      example:
        help: help
        action_type: action_type
        name: name
        description: description
        descriptions:
        - descriptions
        - descriptions
        parameters:
        - {}
        - {}
        mission_group_id: mission_group_id
    GetGroup_missions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this mission
        name:
          type: string
          description: The name of the mission
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetHelper_positions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this position
        map:
          type: string
          description: The url to the map this position belongs to
        name:
          type: string
          description: The name of the position
        type_id:
          type: integer
          description: The type of position. see the general description above
        url:
          type: string
          description: The URL of the resource
      example:
        type_id: 0
        name: name
        guid: guid
        map: map
        url: url
    GetHook:
      type: object
      properties:
        angle:
          type: number
          description: The angle of the hook arm
          format: float
        available:
          type: boolean
          description: Whether the hook data is available or not
        brake:
          $ref: '#/components/schemas/GetHook_brake_1'
        gripper:
          $ref: '#/components/schemas/GetHook_gripper_1'
        height:
          $ref: '#/components/schemas/GetHook_height_1'
      example:
        brake:
          braked: true
          state: 6
          state_string: state_string
        available: true
        angle: 0.8008282
        gripper:
          closed: true
          state: 1
          state_string: state_string
        height:
          state: 5
          height: 5.962134
          state_string: state_string
    GetHook_brake:
      type: object
      properties:
        braked:
          type: boolean
          description: Whether the brake of the hook is active or not
        state:
          type: integer
          description: The state of the hook brake in machine format
        state_string:
          type: string
          description: The state of the hook brake in human format
      example:
        braked: true
        state: 0
        state_string: state_string
    GetHook_gripper:
      type: object
      properties:
        closed:
          type: boolean
          description: Whether the gripper of the hook is closed or not
        state:
          type: integer
          description: The sate of the hook gripper in machine format
        state_string:
          type: string
          description: The state of the hook gripper in human format
      example:
        closed: true
        state: 0
        state_string: state_string
    GetHook_height:
      type: object
      properties:
        height:
          type: integer
          description: The height of the hook in mm
        state:
          type: integer
          description: The state of the hook actuator in machine format
        state_string:
          type: string
          description: The state of the hook actuator in human format
      example:
        state: 6
        height: 0
        state_string: state_string
    GetHook_software_interface:
      type: object
      properties:
        hook_interface_state:
          type: string
          description: Hook interface state
        hook_interface_state_code:
          type: integer
          description: Hook interface state
        hook_is_upgradeable:
          type: boolean
          description: Wheater the hook is ready to be upgraded
        hook_is_upgrading:
          type: boolean
          description: Wheater the hook is upgrading now
        hook_software_matches_robot:
          type: boolean
          description: Wheter the hook software version matches the robot version
        hook_software_newer_than_robot:
          type: boolean
          description: Whether hook software version is newer than robot version
        hook_software_version:
          type: string
          description: Hook software version
        software_file_missing:
          type: boolean
          description: Original software file not found.
        uploading_software_to_hook:
          type: boolean
          description: Wheater we are currently uploading software to hook
      example:
        hook_software_version: hook_software_version
        hook_interface_state_code: 0
        hook_interface_state: hook_interface_state
        software_file_missing: true
        hook_software_matches_robot: true
        hook_software_newer_than_robot: true
        uploading_software_to_hook: true
        hook_is_upgradeable: true
        hook_is_upgrading: true
    GetHw_config_export:
      type: object
    GetHw_config_import:
      type: object
    GetIo_module:
      type: object
      properties:
        address:
          type: string
          description: The address for connecting to the device. it can be a mac address
            or an ip depending on the type of io module
        created_by:
          type: string
          description: The url to the description of the type of this io module
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global unique id across robots that identifies this io
            module
        name:
          type: string
          description: The name of the io module
        num_inputs:
          type: integer
          description: The number of inputs that the io module has
        num_outputs:
          type: integer
          description: The number or outputs that the io module has
        type:
          type: string
          description: "The type of the io module. currently supported devices [wise]."
      example:
        address: address
        num_outputs: 6
        num_inputs: 0
        name: name
        guid: guid
        created_by_id: created_by_id
        type: type
        created_by: created_by
    GetIo_module_status:
      type: object
    GetIo_modules:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this io
            module
        name:
          type: string
          description: The name of the io module
        type:
          type: string
          description: "The type of the io module. currently supported devices [wise]."
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        type: type
        url: url
    GetMap:
      type: object
      properties:
        base_map:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: Base layer
          format: byte
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global id unique across robots that identifies this map
        name:
          type: string
          description: The name of the map
        origin_theta:
          type: number
          description: The angle in the map of the center of the map relative to the
            robots position
          format: float
        origin_x:
          type: number
          description: The x-coordinate in the map of the center of the map relative
            to the robots position
          format: float
        origin_y:
          type: number
          description: The y-coordinate in the map of the center of the map relative
            to the robots position
          format: float
        path_guides:
          type: string
          description: The url to the list of path guides in this map
        paths:
          type: string
          description: The url to the list of paths in this map
        positions:
          type: string
          description: The url to the list of positions in this map
        resolution:
          type: number
          description: The resolution of the map
          format: float
        session_id:
          type: string
          description: The global id unique across robots of the area containing this
            map
      example:
        path_guides: path_guides
        base_map: ""
        session_id: session_id
        positions: positions
        created_by: created_by
        origin_x: 6.0274563
        resolution: 5.962134
        origin_y: 1.4658129
        paths: paths
        name: name
        guid: guid
        origin_theta: 0.8008282
        created_by_id: created_by_id
    GetMap_path_guides:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this path
            guide
        name:
          type: string
          description: The name of the path guide
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetMap_paths:
      type: object
      properties:
        goal_pos:
          type: string
          description: The url to the end position of the path
        guid:
          type: string
          description: The global id unique across robots that identifies this path
        start_pos:
          type: string
          description: The url to the start position of the path
        url:
          type: string
          description: The URL of the resource
      example:
        goal_pos: goal_pos
        guid: guid
        start_pos: start_pos
        url: url
    GetMap_positions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this position
        map:
          type: string
          description: The url to the map this position belongs to
        name:
          type: string
          description: The name of the position
        type_id:
          type: integer
          description: The type of position. see the general description above
        url:
          type: string
          description: The URL of the resource
      example:
        type_id: 0
        name: name
        guid: guid
        map: map
        url: url
    GetMap_record:
      type: object
    GetMap_upload:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global guid of this map upload
        id:
          type: integer
          description: ""
        image_data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: ""
          format: byte
        start_map_guid:
          type: string
          description: ""
        start_map_theta:
          type: number
          description: ""
          format: float
        start_map_x:
          type: number
          description: ""
          format: float
        start_map_y:
          type: number
          description: ""
          format: float
        state:
          type: string
          description: ""
        type:
          type: string
          description: ""
      example:
        start_map_guid: start_map_guid
        image_data: ""
        guid: guid
        created_by_id: created_by_id
        id: 0
        state: state
        start_map_theta: 6.0274563
        start_map_x: 1.4658129
        type: type
        created_by: created_by
        start_map_y: 5.962134
    GetMap_uploads:
      type: object
      properties:
        guid:
          type: string
          description: The global guid of this map upload
        state:
          type: string
          description: ""
        type:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
      example:
        guid: guid
        state: state
        type: type
        url: url
    GetMap_zone:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this area
        map:
          type: string
          description: The url to the map this area belongs to
        name:
          type: string
          description: A name associated with this area
        type_id:
          type: integer
          description: The type of area
        url:
          type: string
          description: The URL of the resource
      example:
        type_id: 0
        name: name
        guid: guid
        map: map
        url: url
    GetMaps:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this map
        name:
          type: string
          description: The name of the map
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetMe:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this user
        name:
          type: string
          description: The name of the user
        url:
          type: string
          description: The URL of the resource
        user_group:
          type: string
          description: Url for the user group this user is in
        user_group_id:
          type: string
          description: Global id of the user group this user is in
      example:
        user_group: user_group
        name: name
        guid: guid
        url: url
        user_group_id: user_group_id
    GetMetrics:
      type: object
    GetMission:
      type: object
      properties:
        actions:
          type: string
          description: The url to the list of actions contained in this mission
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        definition:
          type: string
          description: The url to the list of input parameters this mission accepts
        description:
          type: string
          description: The description of the mission
        group_id:
          type: string
          description: "The id of the area this mission belongs to, or null if the\
            \ mission belongs to all areas"
        guid:
          type: string
          description: The global id unique across robots that identifies this mission
        has_user_parameters:
          type: boolean
          description: Indicates if the mission has dynamic parameters
        hidden:
          type: boolean
          description: If this mission is hidden in the mission list
        is_template:
          type: boolean
          description: True if the missions is a template mission
        name:
          type: string
          description: The name of the mission
        session_id:
          type: string
          description: "The id of the area this mission belongs to, or null if the\
            \ mission belongs to all areas"
        valid:
          type: boolean
          description: Indicates if the mission contains only existing submissions
      example:
        has_user_parameters: true
        hidden: true
        is_template: true
        description: description
        session_id: session_id
        created_by: created_by
        valid: true
        group_id: group_id
        name: name
        guid: guid
        definition: definition
        created_by_id: created_by_id
        actions: actions
    GetMission_action:
      type: object
      properties:
        action_type:
          type: string
          description: The id of the type of action
        created_by_id:
          type: string
          description: User guid of the user of the mission which the action belongs
            to
        guid:
          type: string
          description: The global id unique across robots that identifies this mission
        mission_id:
          type: string
          description: The id of the mission the action belongs to
        parameters:
          type: string
        priority:
          type: integer
          description: The priority of the action
        scope_reference:
          type: string
          description: Reference to the scope in which the action belongs
      example:
        scope_reference: scope_reference
        action_type: action_type
        mission_id: mission_id
        guid: guid
        created_by_id: created_by_id
        priority: 0
        parameters: parameters
    GetMission_actions:
      type: object
      properties:
        action_type:
          type: string
          description: The id of the type of action
        guid:
          type: string
          description: The global id unique across robots that identifies this mission
        mission_id:
          type: string
          description: The id of the mission the action belongs to
        parameters:
          type: string
        priority:
          type: integer
          description: The priority of the action
        url:
          type: string
          description: The URL of the resource
      example:
        action_type: action_type
        mission_id: mission_id
        guid: guid
        priority: 0
        parameters: parameters
        url: url
    Filter:
      type: object
      properties:
        operator:
          type: string
          description: ""
        fieldname:
          type: string
          description: ""
        value:
          type: array
          description: ""
          items:
            type: integer
    NameValue:
      type: object
      properties:
        name:
          type: string
          description: ""
        value:
          type: string
          description: ""
    Help_parameter_constraints:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/Help_parameter_constraints_body'
        default:
          type: object
          properties: {}
          description: ""
        max:
          type: object
          properties: {}
          description: ""
        min:
          type: object
          properties: {}
          description: ""
        value_field:
          type: string
          description: ""
        name_field:
          type: string
          description: ""
        url:
          type: string
          description: ""
        method:
          type: string
          description: ""
        choices:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/NameValue'
    Help_parameter_dependencies:
      type: object
      properties:
        dependency_id:
          type: string
          description: ""
        check_field:
          type: string
          description: ""
        value:
          type: array
          description: ""
          items:
            type: integer
    Help_parameter:
      type: object
      properties:
        type:
          type: string
          description: ""
        id:
          type: string
          description: ""
        name:
          type: string
          description: ""
        input_name:
          type: string
          description: ""
        help:
          type: string
          description: ""
        constraints:
          $ref: '#/components/schemas/Help_parameter_constraints'
        dependencies:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/Help_parameter_dependencies'
    GetMission_definition:
      type: object
      properties:
        action_type:
          type: string
          description: ""
        name:
          type: string
          description: ""
        description:
          type: string
          description: ""
        mission_group_id:
          type: string
          description: ""
        parameters:
          type: array
          description: " TO CHANGE to. TBD... $ref: \"#/definitions/Help_parameter\""
          items:
            type: object
            properties: {}
            example: {}
        valid:
          type: boolean
          description: ""
      example:
        valid: true
        action_type: action_type
        name: name
        description: description
        parameters:
        - {}
        - {}
        mission_group_id: mission_group_id
    GetMission_group:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        feature:
          type: string
          description: The name of the position
        guid:
          type: string
          description: The global id unique across robots that identifies this position
        icon:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: The name of the position
          format: byte
        name:
          type: string
          description: The name of the position
        priority:
          type: integer
          description: The name of the position
      example:
        feature: feature
        icon: ""
        name: name
        guid: guid
        created_by_id: created_by_id
        priority: 0
        created_by: created_by
    GetMission_groups:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this position
        name:
          type: string
          description: The name of the position
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetMission_queue:
      type: object
      properties:
        actions:
          type: string
          description: The list of parameters this mission queue entry accepts
        control_posid:
          type: string
          description: Global id of position used during control states
        control_state:
          type: integer
          description: Mission control state. a value above zero indicates that the
            robot needs an external input in order to continue
        created_by:
          type: string
          description: The url to the description of the type of this element
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        description:
          type: string
          description: "Inerited from mission description, when item was queued"
        finished:
          type: string
          description: The date and time when the mission was finished
          format: date-time
        fleet_schedule_guid:
          type: string
          description: The guid of the mission scheduler element this mission queue
            element corresponds to on the fleet
        id:
          type: integer
          description: The id of the mission queue entry
        message:
          type: string
          description: The last message produced by the actions in the mission list
        mission:
          type: string
          description: The url to the mission that mission that was executed
        mission_id:
          type: string
          description: The global id of the mission that was executed
        ordered:
          type: string
          description: The date end time when the mission was queued
          format: date-time
        parameters:
          type: string
        priority:
          type: integer
          description: The id of the action
        started:
          type: string
          description: The date and time when the missin was started
          format: date-time
        state:
          type: string
          description: The end state after the mission was executed
      example:
        ordered: 2000-01-23T04:56:07.000+00:00
        mission_id: mission_id
        description: description
        finished: 2000-01-23T04:56:07.000+00:00
        started: 2000-01-23T04:56:07.000+00:00
        message: message
        priority: 1
        control_state: 0
        created_by: created_by
        mission: mission
        fleet_schedule_guid: fleet_schedule_guid
        control_posid: control_posid
        created_by_id: created_by_id
        id: 6
        state: state
        actions: actions
        parameters: parameters
    GetMission_queue_action:
      type: object
      properties:
        action_id:
          type: string
          description: The id of the action
        action_type:
          type: string
          description: The name of the action
        finished:
          type: string
          description: The date and time when the action finished
          format: date-time
        id:
          type: integer
          description: The id of the action
        message:
          type: string
          description: The possible message produced by the action
        mission_queue_id:
          type: integer
          description: The id of the action
        parameters:
          type: array
          description: The list of parameters to the action
          items:
            type: object
            properties: {}
            example: {}
        started:
          type: string
          description: The date and time when the action was started
          format: date-time
        state:
          type: string
          description: The end state after executing the action
      example:
        action_id: action_id
        action_type: action_type
        mission_queue_id: 6
        finished: 2000-01-23T04:56:07.000+00:00
        started: 2000-01-23T04:56:07.000+00:00
        id: 0
        state: state
        message: message
        parameters:
        - {}
        - {}
    GetMission_queue_actions:
      type: object
      properties:
        action_id:
          type: string
          description: The id of the action
        action_type:
          type: string
          description: The name of the action
        finished:
          type: string
          description: The date and time when the action finished
          format: date-time
        id:
          type: integer
          description: The id of the action
        message:
          type: string
          description: The possible message produced by the action
        mission_queue_id:
          type: integer
          description: The id of the action
        parameters:
          type: array
          description: The list of parameters to the action
          items:
            type: object
            properties: {}
            example: {}
        started:
          type: string
          description: The date and time when the action was started
          format: date-time
        state:
          type: string
          description: The end state after executing the action
      example:
        action_id: action_id
        action_type: action_type
        mission_queue_id: 6
        finished: 2000-01-23T04:56:07.000+00:00
        started: 2000-01-23T04:56:07.000+00:00
        id: 0
        state: state
        message: message
        parameters:
        - {}
        - {}
    GetMission_queues:
      type: object
      properties:
        id:
          type: integer
          description: The id of the mission queue entry
        state:
          type: string
          description: The end state after the mission was executed
        url:
          type: string
          description: The URL of the resource
      example:
        id: 0
        state: state
        url: url
    GetMissions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this mission
        name:
          type: string
          description: The name of the mission
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetModbu:
      type: object
      properties:
        data_type:
          type: string
          description: The data type needed
        description:
          type: string
          description: A more detailed explanation of the attribute
        id:
          type: integer
          description: The id of the modbus entry
        permissions:
          type: string
          description: If it is allowed to read or write this element
        registers:
          type: array
          description: The registers on the plc where the data will be stored
          items:
            type: object
            properties: {}
            example: {}
        title:
          type: string
          description: A textual description of the desired element
        type:
          type: string
          description: The endpoint to which the element refers
      example:
        permissions: permissions
        data_type: data_type
        description: description
        registers:
        - {}
        - {}
        id: 0
        title: title
        type: type
    GetModbus:
      type: object
      properties:
        data_type:
          type: string
          description: The data type needed
        description:
          type: string
          description: A more detailed explanation of the attribute
        id:
          type: integer
          description: The id of the modbus entry
        permissions:
          type: string
          description: If it is allowed to read or write this element
        registers:
          type: array
          description: The registers on the plc where the data will be stored
          items:
            type: object
            properties: {}
            example: {}
        title:
          type: string
          description: A textual description of the desired element
        type:
          type: string
          description: The endpoint to which the element refers
      example:
        permissions: permissions
        data_type: data_type
        description: description
        registers:
        - {}
        - {}
        id: 0
        title: title
        type: type
    GetModbus_mission:
      type: object
      properties:
        coil_id:
          type: integer
          description: The id of the coil to trigger the mission
        created_by:
          type: string
          description: The url to the description of the type of this modbus mission
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global id unique across robots that identifies this modbus
            mission
        id:
          type: integer
          description: The id of the modbus mission entry
        mission:
          type: string
          description: The url to the mission details
        mission_id:
          type: string
          description: The global id of the mission that was executed
        name:
          type: string
          description: A more detailed explanation of the attribute
        parameters:
          type: string
      example:
        mission: mission
        coil_id: 0
        mission_id: mission_id
        name: name
        guid: guid
        created_by_id: created_by_id
        id: 6
        created_by: created_by
        parameters: parameters
    GetModbus_missions:
      type: object
      properties:
        coil_id:
          type: integer
          description: The id of the coil to trigger the mission
        guid:
          type: string
          description: The global id unique across robots that identifies this modbus
            mission
        url:
          type: string
          description: The URL of the resource
      example:
        coil_id: 0
        guid: guid
        url: url
    GetPath:
      type: object
      properties:
        autogenerated:
          type: boolean
          description: If the path was autogenerated or not
        footprint:
          type: string
          description: The footprint of the robot for which this path was generated
        goal_pos:
          type: string
          description: The url to the end position of the path
        goal_pos_id:
          type: string
          description: The id of the end position of the path
        guid:
          type: string
          description: The global id unique across robots that identifies this path
        last_used:
          type: string
          description: The date and time of the last time this path was used
          format: date-time
        length:
          type: number
          description: The length of the path in meters
          format: float
        map_crc:
          type: string
          description: The crc for the path
        path:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: A binary representation of the path
          format: byte
        start_pos:
          type: string
          description: The url to the start position of the path
        start_pos_id:
          type: string
          description: The id of the start position of the path
        time:
          type: number
          description: The time it took to drive the path the first time
          format: float
        valid:
          type: boolean
          description: If the path is valid or not
      example:
        last_used: 2000-01-23T04:56:07.000+00:00
        start_pos_id: start_pos_id
        length: 0.8008282
        autogenerated: true
        start_pos: start_pos
        valid: true
        path: ""
        footprint: footprint
        map_crc: map_crc
        goal_pos: goal_pos
        guid: guid
        goal_pos_id: goal_pos_id
        time: 6.0274563
    GetPath_guide:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this element
        created_by_id:
          type: string
          description: The global unique id of the user that created this path guide
        goals_count:
          type: integer
          description: The number of goal positions in the path guide
        guid:
          type: string
          description: The global unique id across robots that identifies this path
            guide
        map_id:
          type: string
          description: The global id of the map this path guide belongs to
        name:
          type: string
          description: The name of the path guide
        options:
          type: string
          description: The url to the list of position options for this path path
        positions:
          type: string
          description: The url to the list of positions used in this path guide
        starts_count:
          type: integer
          description: The number of start positions in the path guide
        vias_count:
          type: integer
          description: The number of via positions in the path guide
      example:
        map_id: map_id
        starts_count: 6
        name: name
        options: options
        vias_count: 1
        goals_count: 0
        guid: guid
        positions: positions
        created_by_id: created_by_id
        created_by: created_by
    GetPath_guide_options:
      type: object
      properties:
        goals:
          type: array
          description: The list of options for goal positions
          items:
            $ref: '#/components/schemas/GetPath_guide_options_goals'
        starts:
          type: array
          description: The list of options for start positions
          items:
            $ref: '#/components/schemas/GetPath_guide_options_goals'
        vias:
          type: array
          description: The list of options for via positions
          items:
            $ref: '#/components/schemas/GetPath_guide_options_goals'
      example:
        vias:
        - null
        - null
        starts:
        - null
        - null
        goals:
        - name: name
          pos_guid: pos_guid
        - name: name
          pos_guid: pos_guid
    GetPath_guide_position:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots of the position in the list
            of path constraints positions
        path_guide_guid:
          type: string
          description: The global unique id across robots of the path guide this position
            is related to
        pos_guid:
          type: string
          description: The global unique id across robots that identifies this position
        pos_type:
          type: string
          description: The type of position of the guide (start/via/goal)
        priority:
          type: integer
          description: The order in which to follow the via positions in the path
            guide
      example:
        pos_type: pos_type
        path_guide_guid: path_guide_guid
        guid: guid
        pos_guid: pos_guid
        priority: 0
    GetPath_guide_positions:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots of the position in the list
            of path constraints positions
        path_guide_guid:
          type: string
          description: The global unique id across robots of the path guide this position
            is related to
        pos_type:
          type: string
          description: The type of position of the guide (start/via/goal)
        url:
          type: string
          description: The URL of the resource
      example:
        pos_type: pos_type
        path_guide_guid: path_guide_guid
        guid: guid
        url: url
    GetPath_guides:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this path
            guide
        name:
          type: string
          description: The name of the path guide
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetPath_guides_position:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots of the position in the list
            of path constraints positions
        path_guide_guid:
          type: string
          description: The global unique id across robots of the path guide this position
            is related to
        pos_guid:
          type: string
          description: The global unique id across robots that identifies this position
        pos_type:
          type: string
          description: The type of position of the guide (start/via/goal)
        priority:
          type: integer
          description: The order in which to follow the via positions in the path
            guide
      example:
        pos_type: pos_type
        path_guide_guid: path_guide_guid
        guid: guid
        pos_guid: pos_guid
        priority: 0
    GetPath_guides_positions:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots of the position in the list
            of path constraints positions
        path_guide_guid:
          type: string
          description: The global unique id across robots of the path guide this position
            is related to
        pos_type:
          type: string
          description: The type of position of the guide (start/via/goal)
        url:
          type: string
          description: The URL of the resource
      example:
        pos_type: pos_type
        path_guide_guid: path_guide_guid
        guid: guid
        url: url
    GetPath_guides_precalc:
      type: object
      properties:
        active:
          type: boolean
          description: Boolean indicating if a path guide precalculation is in progress
        fail_count:
          type: integer
          description: The number of paths that was not possible to precalculate
        message:
          type: string
          description: Status message from the precalculation module
        path_guide_guid:
          type: string
          description: The global unique id across robots that identifies the path
            guide being precalculated
        success_count:
          type: integer
          description: The number of paths that has been successfully calculated
        total_count:
          type: integer
          description: The number of total paths to calculate
      example:
        path_guide_guid: path_guide_guid
        total_count: 1
        success_count: 6
        active: true
        message: message
        fail_count: 0
    GetPaths:
      type: object
      properties:
        goal_pos:
          type: string
          description: The url to the end position of the path
        guid:
          type: string
          description: The global id unique across robots that identifies this path
        start_pos:
          type: string
          description: The url to the start position of the path
        url:
          type: string
          description: The URL of the resource
      example:
        goal_pos: goal_pos
        guid: guid
        start_pos: start_pos
        url: url
    GetPermission:
      type: object
      properties:
        endpoint:
          type: string
          description: ""
        guid:
          type: string
          description: The global unique id across robots that identifies this permission
        permission_type:
          type: string
          description: The permission type
        user_group_guid:
          type: string
          description: The global id of the usergroup
      example:
        endpoint: endpoint
        permission_type: permission_type
        guid: guid
        user_group_guid: user_group_guid
    GetPermissions:
      type: object
      properties:
        endpoint:
          type: string
          description: ""
        guid:
          type: string
          description: The global unique id across robots that identifies this permission
        permission_type:
          type: string
          description: The permission type
        url:
          type: string
          description: The URL of the resource
      example:
        endpoint: endpoint
        permission_type: permission_type
        guid: guid
        url: url
    GetPos_docking_offsets:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this docking
            offset
        name:
          type: string
          description: The name of the docking offset. used for docking offset independent
            from positions.
        position:
          type: string
          description: The url to the position
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        position: position
        url: url
    GetPosition:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        docking_offsets:
          type: string
          description: The url to the possible docking offset. if the position does
            not have a docking offset then this field is empty
        guid:
          type: string
          description: The global id unique across robots that identifies this position
        help_positions:
          type: string
          description: ""
        map:
          type: string
          description: The url to the map this position belongs to
        map_id:
          type: string
          description: The global id of the map this positions belongs to
        name:
          type: string
          description: The name of the position
        orientation:
          type: number
          description: The orientation of the position in degrees relative to origo
            of the underlying map
          format: float
        parent:
          type: string
          description: The url to the possible parent position. if the position does
            not have a parent position then this field is empty
        parent_id:
          type: string
          description: "The global id of the possible parent position of the current\
            \ position. a parent position is a position related to the current position,\
            \ for instance the parent position of a trolley left entry position is\
            \ the actual trolley position. if the position does not have a parent\
            \ position then this field is empty"
        pos_x:
          type: number
          description: The x-coordinate of the position relative to origo of the underlying
            map
          format: float
        pos_y:
          type: number
          description: The y-coordinate of the position relative to origo of the underlying
            map
          format: float
        type:
          type: string
          description: The url to the description of the type of this position
        type_id:
          type: integer
          description: The type of position. see the general description above
      example:
        help_positions: help_positions
        parent: parent
        orientation: 0.8008282
        docking_offsets: docking_offsets
        type_id: 5
        type: type
        created_by: created_by
        pos_y: 1.4658129
        pos_x: 6.0274563
        map_id: map_id
        parent_id: parent_id
        name: name
        guid: guid
        created_by_id: created_by_id
        map: map
    GetPosition_transition_list:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        goal_pos_id:
          type: string
          description: The id of the end position for the transition list
        guid:
          type: string
          description: The global id unique across robots that identifies this path
        mission_id:
          type: string
          description: The guid of the mission in the transition list
        start_pos_id:
          type: string
          description: The id of the start position for the transition list
      example:
        start_pos_id: start_pos_id
        mission_id: mission_id
        guid: guid
        created_by_id: created_by_id
        goal_pos_id: goal_pos_id
        created_by: created_by
    GetPosition_transition_list_from_session:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        goal_pos_id:
          type: string
          description: The id of the end position for the transition list
        guid:
          type: string
          description: The global id unique across robots that identifies this path
        mission_id:
          type: string
          description: The guid of the mission in the transition list
        start_pos_id:
          type: string
          description: The id of the start position for the transition list
      example:
        start_pos_id: start_pos_id
        mission_id: mission_id
        guid: guid
        created_by_id: created_by_id
        goal_pos_id: goal_pos_id
        created_by: created_by
    GetPosition_transition_lists:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        goal_pos_id:
          type: string
          description: The id of the end position for the transition list
        guid:
          type: string
          description: The global id unique across robots that identifies this path
        mission_id:
          type: string
          description: The guid of the mission in the transition list
        start_pos_id:
          type: string
          description: The id of the start position for the transition list
      example:
        start_pos_id: start_pos_id
        mission_id: mission_id
        guid: guid
        created_by_id: created_by_id
        goal_pos_id: goal_pos_id
        created_by: created_by
    GetPosition_type:
      type: object
      properties:
        hidden:
          type: boolean
          description: False if the position is not created by the user
        id:
          type: integer
          description: Unique id for the position type
        name:
          type: string
          description: Name of the position type
        reachable_for_robot:
          type: boolean
          description: True if the robot can actually go to that position
      example:
        hidden: true
        name: name
        id: 0
        reachable_for_robot: true
    GetPosition_types:
      type: object
      properties:
        id:
          type: integer
          description: Unique id for the position type
        name:
          type: string
          description: Name of the position type
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        id: 0
        url: url
    GetPositions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this position
        map:
          type: string
          description: The url to the map this position belongs to
        name:
          type: string
          description: The name of the position
        type_id:
          type: integer
          description: The type of position. see the general description above
        url:
          type: string
          description: The URL of the resource
      example:
        type_id: 0
        name: name
        guid: guid
        map: map
        url: url
    GetProtective_scan:
      type: object
    GetRegister:
      type: object
      properties:
        id:
          type: integer
          description: The index of the register
        label:
          type: string
          description: A label for the register
        value:
          type: number
          description: The value of the register
          format: float
      example:
        id: 0
        label: label
        value: 6.0274563
    GetRegisters:
      type: object
      properties:
        id:
          type: integer
          description: The index of the register
        label:
          type: string
          description: A label for the register
        url:
          type: string
          description: The URL of the resource
        value:
          type: number
          description: The value of the register
          format: float
      example:
        id: 0
        label: label
        value: 6.0274563
        url: url
    GetRemote_support:
      type: object
    GetRemote_support_log:
      type: object
    GetRobots:
      type: object
    GetService_book:
      type: object
      properties:
        created_at:
          type: string
          description: Creation time of the service note
        created_by:
          type: string
          description: The url to the user
        created_by_id:
          type: string
          description: The user which created the log
        created_by_name:
          type: string
          description: The user name which created the log
        description:
          type: string
          description: The sevice note
        guid:
          type: string
          description: The global unique id across robots that identifies this service
            note
        owner_group:
          type: string
          description: The url to the owner group
        owner_group_guid:
          type: string
          description: 'The usergroup which owns the service book '
        owner_group_name:
          type: string
          description: The group name which owns the log
      example:
        owner_group_name: owner_group_name
        owner_group_guid: owner_group_guid
        created_at: created_at
        description: description
        guid: guid
        created_by_id: created_by_id
        created_by_name: created_by_name
        owner_group: owner_group
        created_by: created_by
    GetService_books:
      type: object
      properties:
        created_at:
          type: string
          description: Creation time of the service note
        created_by:
          type: string
          description: The url to the user
        created_by_id:
          type: string
          description: The user which created the log
        created_by_name:
          type: string
          description: The user name which created the log
        description:
          type: string
          description: The sevice note
        guid:
          type: string
          description: The global unique id across robots that identifies this service
            note
        owner_group:
          type: string
          description: The url to the owner group
        owner_group_guid:
          type: string
          description: 'The usergroup which owns the service book '
        owner_group_name:
          type: string
          description: The group name which owns the log
      example:
        owner_group_name: owner_group_name
        owner_group_guid: owner_group_guid
        created_at: created_at
        description: description
        guid: guid
        created_by_id: created_by_id
        created_by_name: created_by_name
        owner_group: owner_group
        created_by: created_by
    GetSession:
      type: object
      properties:
        active:
          type: boolean
          description: Boolean indicating whether the session is the active session
            in the fleet
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        description:
          type: string
          description: A possible description of the area
        export:
          type: string
          description: ""
        guid:
          type: string
          description: The global id unique across robots that identifies this area
        maps:
          type: string
          description: The url to the list of maps that is in this area
        name:
          type: string
          description: The name of the area
      example:
        maps: maps
        name: name
        active: true
        description: description
        guid: guid
        created_by_id: created_by_id
        created_by: created_by
        export: export
    GetSession_elevator_floors:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this elevator
            floor
        map:
          type: string
          description: ""
        map_guid:
          type: string
          description: The map id associated with the floor
        url:
          type: string
          description: The URL of the resource
      example:
        guid: guid
        map_guid: map_guid
        map: map
        url: url
    GetSession_elevators:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this elevator
        name:
          type: string
          description: The name of the elevator
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetSession_export:
      type: object
    GetSession_import:
      type: object
      properties:
        error_message:
          type: string
          description: A description of this action
        sessions_imported:
          type: integer
          description: The type of area action
        sessions_total:
          type: integer
          description: A name associated with this area action
        status:
          type: integer
          description: A nice name associated with this area action
      example:
        error_message: error_message
        sessions_imported: 0
        sessions_total: 6
        status: 1
    GetSession_maps:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this map
        name:
          type: string
          description: The name of the map
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetSession_missions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this mission
        name:
          type: string
          description: The name of the mission
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetSessions:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this area
        name:
          type: string
          description: The name of the area
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetSetting:
      type: object
      properties:
        children_ids:
          type: string
        constraints:
          type: object
          properties: {}
          description: ""
          example: {}
        default:
          type: string
          description: ""
        description:
          type: string
          description: ""
        editable:
          type: string
        fieldtype:
          type: string
          description: ""
        full_name:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        parent_id:
          type: string
        parent_name:
          type: string
          description: ""
        parent_value:
          type: string
        settings_group:
          type: string
          description: ""
        settings_group_id:
          type: integer
          description: ""
        type:
          type: string
          description: ""
        value:
          type: string
          description: ""
      example:
        parent_name: parent_name
        editable: editable
        description: description
        fieldtype: fieldtype
        type: type
        constraints: {}
        parent_value: parent_value
        children_ids: children_ids
        default: default
        full_name: full_name
        parent_id: parent_id
        name: name
        settings_group_id: 6
        id: 0
        value: value
        settings_group: settings_group
    GetSetting_advanced:
      type: object
      properties:
        children_ids:
          type: string
        constraints:
          type: object
          properties: {}
          description: ""
          example: {}
        default:
          type: string
          description: ""
        description:
          type: string
          description: ""
        editable:
          type: string
        fieldtype:
          type: string
          description: ""
        full_name:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        parent_id:
          type: string
        parent_name:
          type: string
          description: ""
        parent_value:
          type: string
        settings_group:
          type: string
          description: ""
        settings_group_id:
          type: integer
          description: ""
        type:
          type: string
          description: ""
        value:
          type: string
          description: ""
      example:
        parent_name: parent_name
        editable: editable
        description: description
        fieldtype: fieldtype
        type: type
        constraints: {}
        parent_value: parent_value
        children_ids: children_ids
        default: default
        full_name: full_name
        parent_id: parent_id
        name: name
        settings_group_id: 6
        id: 0
        value: value
        settings_group: settings_group
    GetSetting_group:
      type: object
      properties:
        advanced_settings_count:
          type: integer
          description: ""
        description:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        priority:
          type: integer
          description: ""
        settings_count:
          type: integer
          description: ""
      example:
        settings_count: 5
        name: name
        description: description
        advanced_settings_count: 0
        id: 6
        priority: 1
    GetSetting_group_advanced_settings:
      type: object
      properties:
        default:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        parent_name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        parent_name: parent_name
        default: default
        name: name
        id: 0
        value: value
        url: url
    GetSetting_group_settings:
      type: object
      properties:
        default:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        parent_name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        parent_name: parent_name
        default: default
        name: name
        id: 0
        value: value
        url: url
    GetSetting_groups:
      type: object
      properties:
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        id: 0
        url: url
    GetSettings:
      type: object
      properties:
        default:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        parent_name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        parent_name: parent_name
        default: default
        name: name
        id: 0
        value: value
        url: url
    GetSettings_advanced:
      type: object
      properties:
        default:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        parent_name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        parent_name: parent_name
        default: default
        name: name
        id: 0
        value: value
        url: url
    GetSetup_cameras:
      type: object
      properties:
        camera_model:
          type: string
          description: ""
        camera_position:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        camera_position: camera_position
        camera_model: camera_model
        value: value
        url: url
    GetSetup_external_interface_serials:
      type: object
      properties:
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        name: name
        id: 0
        value: value
        url: url
    GetSetup_laser_serials:
      type: object
      properties:
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        name: name
        id: 0
        value: value
        url: url
    GetSetup_mc_serials:
      type: object
      properties:
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        name: name
        id: 0
        value: value
        url: url
    GetSetup_serial_device:
      type: object
      properties:
        default_value:
          type: string
          description: ""
        description:
          type: string
          description: ""
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        request_succeeded:
          type: boolean
          description: ""
        ros_name:
          type: string
          description: ""
        url:
          type: string
          description: Specific serial device information
        value:
          type: string
          description: ""
      example:
        ros_name: ros_name
        name: name
        description: description
        request_succeeded: true
        default_value: default_value
        id: 0
        value: value
        url: url
    GetSetup_serial_devices:
      type: object
      properties:
        id:
          type: integer
          description: ""
        name:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
        value:
          type: string
          description: ""
      example:
        name: name
        id: 0
        value: value
        url: url
    GetSick_config:
      type: object
      properties:
        crc:
          type: string
          description: ""
        description:
          type: string
          description: ""
        filename:
          type: string
          description: ""
        guid:
          type: string
          description: ""
        supported_software_version:
          $ref: '#/components/schemas/GetSick_config_supported_software_version'
        url:
          type: string
          description: Specific sick configuration file.
      example:
        filename: filename
        crc: crc
        description: description
        guid: guid
        supported_software_version:
          from: from
          to: to
        url: url
    GetSick_config_download:
      type: object
    GetSick_configs:
      type: object
      properties:
        description:
          type: string
          description: ""
        filename:
          type: string
          description: ""
        guid:
          type: string
          description: ""
        url:
          type: string
          description: The URL of the resource
      example:
        filename: filename
        description: description
        guid: guid
        url: url
    GetSoftware_backup:
      type: object
      properties:
        date:
          type: string
          description: The date where the backup was created
          format: date-time
        guid:
          type: string
          description: The guid of the software backup
        state:
          type: string
          description: The state of the software backup
        version:
          type: string
          description: The version of the software backup
      example:
        date: 2000-01-23T04:56:07.000+00:00
        guid: guid
        state: state
        version: version
    GetSoftware_backups:
      type: object
      properties:
        date:
          type: string
          description: The date where the backup was created
          format: date-time
        guid:
          type: string
          description: The guid of the software backup
        state:
          type: string
          description: The state of the software backup
        url:
          type: string
          description: The URL of the resource
        version:
          type: string
          description: The version of the software backup
      example:
        date: 2000-01-23T04:56:07.000+00:00
        guid: guid
        state: state
        version: version
        url: url
    GetSoftware_log:
      type: object
      properties:
        action:
          type: string
          description: The action performed (upgrade/restore)
        end_time:
          type: string
          description: The end time of the upgrade
          format: date-time
        from:
          type: string
          description: The software version upgrading from
        guid:
          type: string
          description: The guid of upgrade entry
        message:
          type: string
          description: The status message from upgrade
        start_time:
          type: string
          description: The start time of the upgrade
          format: date-time
        state:
          type: string
          description: The state of the upgrade (succeeded/failed/started
        to:
          type: string
          description: The software version upgrading to
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        end_time: 2000-01-23T04:56:07.000+00:00
        action: action
        guid: guid
        from: from
        state: state
        to: to
        message: message
    GetSoftware_logs:
      type: object
      properties:
        action:
          type: string
          description: The action performed (upgrade/restore)
        end_time:
          type: string
          description: The end time of the upgrade
          format: date-time
        from:
          type: string
          description: The software version upgrading from
        guid:
          type: string
          description: The guid of upgrade entry
        start_time:
          type: string
          description: The start time of the upgrade
          format: date-time
        state:
          type: string
          description: The state of the upgrade (succeeded/failed/started
        to:
          type: string
          description: The software version upgrading to
        url:
          type: string
          description: The URL of the resource
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        end_time: 2000-01-23T04:56:07.000+00:00
        action: action
        guid: guid
        from: from
        state: state
        to: to
        url: url
    GetSoftware_robot_peripherals_status:
      type: object
      properties:
        current_upgrade_status:
          type: string
          description: Current peripheral upgrade status
        current_upgrade_status_msg:
          type: string
          description: Current peripheral upgrade status message
        current_version:
          type: string
          description: Current peripheral fw/sw version
        peripheral_name:
          type: string
          description: Peripheral name
        upgrade_succeeded:
          type: string
          description: "True if upgrade is successful, false if failed, if in progress,\
            \ it should be a string with progress"
        url:
          type: string
          description: The URL of the resource
      example:
        current_upgrade_status_msg: current_upgrade_status_msg
        current_version: current_version
        peripheral_name: peripheral_name
        upgrade_succeeded: upgrade_succeeded
        current_upgrade_status: current_upgrade_status
        url: url
    GetSoftware_system_status:
      type: object
      properties:
        application_version:
          type: string
          description: Mir_application sw version
        free_disk_space:
          type: string
          description: Free disk space in the sw images partition
        last_sw_update_date:
          type: string
          description: The date of the last upgrade in the system
          format: date-time
        last_sw_update_status:
          type: string
          description: Status of the last upgrade in the system
        last_sw_update_type:
          type: string
          description: Status of the last upgrade in the system
        platform_version:
          type: string
          description: Mir_platform sw version
        url:
          type: string
          description: The URL of the resource
        used_disk_space:
          type: string
          description: Used disk space in the sw images partition
      example:
        used_disk_space: used_disk_space
        last_sw_update_status: last_sw_update_status
        platform_version: platform_version
        free_disk_space: free_disk_space
        last_sw_update_type: last_sw_update_type
        last_sw_update_date: 2000-01-23T04:56:07.000+00:00
        url: url
        application_version: application_version
    GetSoftware_upgrade:
      type: object
      properties:
        guid:
          type: string
          description: The guid of the software upgrade
        type:
          type: string
          description: The type of the software upgrade
        upload_date:
          type: string
          description: The upload date of the software upgrade
          format: date-time
        version:
          type: string
          description: The version of the software upgrade
      example:
        guid: guid
        type: type
        version: version
        upload_date: 2000-01-23T04:56:07.000+00:00
    GetSoftware_upgrades:
      type: object
      properties:
        guid:
          type: string
          description: The guid of the software upgrade
        type:
          type: string
          description: The type of the software upgrade
        upload_date:
          type: string
          description: The upload date of the software upgrade
          format: date-time
        url:
          type: string
          description: The URL of the resource
        version:
          type: string
          description: The version of the software upgrade
      example:
        guid: guid
        type: type
        version: version
        url: url
        upload_date: 2000-01-23T04:56:07.000+00:00
    GetSound:
      type: object
      properties:
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global id unique across robots that identifies this sound
        length:
          type: string
          description: The length of the sound in the format hh:mm:ss
        name:
          type: string
          description: The name of the sound
        note:
          type: string
          description: A possible description of the sound
        sound:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: A binary representation of the sound
          format: byte
        stream:
          type: string
          description: The url to stream the raw audio
        volume:
          type: integer
          description: The volumne of the sound when played
      example:
        volume: 0
        note: note
        stream: stream
        sound: ""
        length: length
        name: name
        guid: guid
        created_by_id: created_by_id
        created_by: created_by
    GetSound_stream:
      type: object
    GetSounds:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this sound
        length:
          type: string
          description: The length of the sound in the format hh:mm:ss
        name:
          type: string
          description: The name of the sound
        url:
          type: string
          description: The URL of the resource
        volume:
          type: integer
          description: The volumne of the sound when played
      example:
        volume: 0
        length: length
        name: name
        guid: guid
        url: url
    GetStatus:
      type: object
      properties:
        battery_percentage:
          type: number
          description: The current charge percentage of the battery
          format: float
        battery_time_remaining:
          type: integer
          description: The approximate time remaining on the battery during normal
            operation of the robot
        distance_to_next_target:
          type: number
          description: The distance to the next target of the robot
          format: float
        errors:
          type: array
          description: The list of actions executed as part of the mission
          items:
            $ref: '#/components/schemas/GetStatus_errors'
        footprint:
          type: string
          description: The current footprint of the robot
        hook_data:
          $ref: '#/components/schemas/GetStatus_hook_data'
        hook_status:
          $ref: '#/components/schemas/GetStatus_hook_status'
        joystick_low_speed_mode_enabled:
          type: boolean
          description: ""
        joystick_web_session_id:
          type: string
          description: The id of the web user that has control over the joystick
        map_id:
          type: string
          description: The id of the current map the robot recides in
        mission_queue_id:
          type: integer
          description: The id of the current job the robot executes
        mission_queue_url:
          type: string
          description: The url to the active mission in queue
        mission_text:
          type: string
          description: Status message from mission controller
        mode_id:
          type: integer
          description: The id of the current mode of the robot
        mode_key_state:
          type: string
          description: A textual description of the position of the mode key
        mode_text:
          type: string
          description: A textual description of the current state of the robot
        moved:
          type: number
          description: ""
          format: float
        position:
          $ref: '#/components/schemas/GetStatus_position'
        robot_model:
          type: string
          description: The model of the robot
        robot_name:
          type: string
          description: The name of the robot
        safety_system_muted:
          type: boolean
          description: ""
        serial_number:
          type: string
          description: The model of the robot
        session_id:
          type: string
          description: The id of the session the robot recides in
        state_id:
          type: integer
          description: The id of the current state of the robot
        state_text:
          type: string
          description: A textual description of the current state of the robot
        unloaded_map_changes:
          type: boolean
          description: ""
        uptime:
          type: integer
          description: The uptime of the robot
        user_prompt:
          $ref: '#/components/schemas/GetStatus_user_prompt'
        velocity:
          $ref: '#/components/schemas/GetStatus_velocity'
      example:
        mission_text: mission_text
        battery_time_remaining: 6
        hook_data:
          length: 7.0614014
          angle:
            angle: 5.637377
          height: 2.302136
        hook_status:
          available: true
          cart_attached: true
          cart:
            offset_locked_wheels: 4.145608
            length: 2.027123
            width: 7.386282
            id: 3.6160767
            height: 9.301444
        joystick_low_speed_mode_enabled: true
        moved: 1.4894159
        robot_name: robot_name
        joystick_web_session_id: joystick_web_session_id
        unloaded_map_changes: true
        user_prompt:
          user_group: user_group
          question: question
          options:
          - options
          - options
          guid: guid
          timeout: 9.965781
        distance_to_next_target: 1.4658129
        map_id: map_id
        mode_id: 1
        state_id: 4
        mode_key_state: mode_key_state
        session_id: session_id
        safety_system_muted: true
        serial_number: serial_number
        velocity:
          angular: 9.36931
          linear: 6.6835623
        uptime: 5
        footprint: footprint
        robot_model: robot_model
        state_text: state_text
        mission_queue_id: 1
        mission_queue_url: mission_queue_url
        mode_text: mode_text
        battery_percentage: 0.8008282
        position:
          orientation: 6.846853
          x: 7.4577446
          "y": 1.1730742
        errors:
        - code: 5
          non_resettable: true
          module: module
          description: description
        - code: 5
          non_resettable: true
          module: module
          description: description
    GetSwagger_doc:
      type: object
    GetSystem_info:
      type: object
    GetTimezone:
      type: object
    GetUser:
      type: object
      properties:
        create_time:
          type: string
          description: Creation time of the user
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        dashboard_id:
          type: string
          description: ""
        email:
          type: string
          description: The email of the user
        guid:
          type: string
          description: The global unique id across robots that identifies this user
        name:
          type: string
          description: The name of the user
        pincode:
          type: string
          description: Pincode for the user
        single_dashboard:
          type: boolean
          description: ""
        update_time:
          type: string
          description: Last time the user was updated
        url:
          type: string
          description: Url to this user
        user_group:
          type: string
          description: Url for the user group this user is in
        user_group_id:
          type: string
          description: Global id of the user group this user is in
        username:
          type: string
          description: The username of the user
      example:
        pincode: pincode
        user_group: user_group
        create_time: create_time
        created_by: created_by
        url: url
        update_time: update_time
        name: name
        guid: guid
        created_by_id: created_by_id
        single_dashboard: true
        email: email
        user_group_id: user_group_id
        dashboard_id: dashboard_id
        username: username
    GetUser_group:
      type: object
      properties:
        create_time:
          type: string
          description: Creation time of the usergroup
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        guid:
          type: string
          description: The global unique id across robots that identifies this usergroup
        name:
          type: string
          description: Name of the usergroup
        session_expiration_enabled:
          type: boolean
          description: Session expiration enabled
        session_timeout:
          type: integer
          description: Session expiration timeout
        update_time:
          type: string
          description: Last time the usergroup was updated
      example:
        update_time: update_time
        create_time: create_time
        session_expiration_enabled: true
        name: name
        guid: guid
        created_by_id: created_by_id
        created_by: created_by
        session_timeout: 0
    GetUser_group_permission:
      type: object
      properties:
        endpoint:
          type: string
          description: ""
        guid:
          type: string
          description: The global unique id across robots that identifies this permission
        permission_type:
          type: string
          description: The permission type
        url:
          type: string
          description: The URL of the resource
      example:
        endpoint: endpoint
        permission_type: permission_type
        guid: guid
        url: url
    GetUser_groups:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this usergroup
        name:
          type: string
          description: Name of the usergroup
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetUser_me_group:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this usergroup
        name:
          type: string
          description: Name of the usergroup
        url:
          type: string
          description: The URL of the resource
      example:
        name: name
        guid: guid
        url: url
    GetUser_me_permissions:
      type: object
      properties:
        endpoint:
          type: string
          description: ""
        guid:
          type: string
          description: The global unique id across robots that identifies this permission
        permission_type:
          type: string
          description: The permission type
        url:
          type: string
          description: The URL of the resource
      example:
        endpoint: endpoint
        permission_type: permission_type
        guid: guid
        url: url
    GetUsers:
      type: object
      properties:
        guid:
          type: string
          description: The global unique id across robots that identifies this user
        name:
          type: string
          description: The name of the user
        url:
          type: string
          description: The URL of the resource
        user_group:
          type: string
          description: Url for the user group this user is in
        user_group_id:
          type: string
          description: Global id of the user group this user is in
      example:
        user_group: user_group
        name: name
        guid: guid
        url: url
        user_group_id: user_group_id
    GetUsers_auth:
      type: object
      properties:
        expiration_time:
          type: string
          format: date-time
        ip:
          type: string
        login_time:
          type: string
          format: date-time
        token:
          type: string
        user_id:
          type: string
      example:
        user_id: user_id
        login_time: 2000-01-23T04:56:07.000+00:00
        expiration_time: 2000-01-23T04:56:07.000+00:00
        ip: ip
        token: token
    GetWifi_api:
      type: object
    GetWifi_connection:
      type: object
      properties:
        bgscan_long_interval:
          type: integer
          description: Bgscan lang interval parameter
        bgscan_short_interval:
          type: integer
          description: Bgscan short interval parameter
        bgscan_threshold:
          type: integer
          description: Bgscan threshold parameter
        broadcast:
          type: string
          description: Broadcast for the connection
        bssid:
          type: string
          description: Access point mac address
        connected:
          type: boolean
          description: Connected to the network of this connection
        description:
          type: string
          description: Description of the connection
        device:
          type: string
          description: Device to use for this connection
        dns:
          type: string
          description: Dnss for the connection
        ip_address:
          type: string
          description: Ip address for the connection
        last_connected:
          type: string
          description: Date and time for when the connection was last successfully
            connected
        mac:
          type: string
          description: Network adapter mac address
        name:
          type: string
          description: Name or id of the connection
        netmask:
          type: string
          description: Netmask for the connection
        scan_freqs:
          type: array
          description: A list of scan frequecies
          items:
            type: integer
            description: ""
        security:
          type: string
          description: The security method used by the connection
        type:
          type: string
          description: Connection type e.g. 802-11-wireless
        url:
          type: string
          description: Specific connection
        uuid:
          type: string
          description: Uuid of the connection
      example:
        broadcast: broadcast
        bssid: bssid
        dns: dns
        description: description
        ip_address: ip_address
        type: type
        bgscan_threshold: 1
        uuid: uuid
        mac: mac
        url: url
        connected: true
        bgscan_long_interval: 0
        security: security
        netmask: netmask
        bgscan_short_interval: 6
        name: name
        scan_freqs:
        - 5
        - 5
        device: device
        last_connected: last_connected
    GetWifi_connections:
      type: object
      properties:
        bssid:
          type: string
          description: Access point mac address
        connected:
          type: boolean
          description: Connected to the network of this connection
        mac:
          type: string
          description: Network adapter mac address
        name:
          type: string
          description: Name or id of the connection
        url:
          type: string
          description: The URL of the resource
        uuid:
          type: string
          description: Uuid of the connection
      example:
        connected: true
        bssid: bssid
        name: name
        uuid: uuid
        mac: mac
        url: url
    GetWifi_network:
      type: object
      properties:
        channel:
          type: integer
          description: 'Network channel '
        connected:
          type: boolean
          description: Connected to this network
        device:
          type: string
          description: Device
        frequency:
          type: string
          description: Network frequency
        guid:
          type: string
          description: The guid of the wifi
        security:
          type: string
          description: Security
        ssid:
          type: string
          description: Ssid of the wlan
        strength:
          type: integer
          description: Signal strength
        url:
          type: string
          description: Specific wifi network
      example:
        connected: true
        security: security
        strength: 6
        channel: 0
        guid: guid
        device: device
        ssid: ssid
        url: url
        frequency: frequency
    GetWifi_networks:
      type: object
      properties:
        connected:
          type: boolean
          description: Connected to this network
        guid:
          type: string
          description: The guid of the wifi
        ssid:
          type: string
          description: Ssid of the wlan
        url:
          type: string
          description: The URL of the resource
      example:
        connected: true
        guid: guid
        ssid: ssid
        url: url
    GetWorld_model:
      type: object
    PostAction_definition:
      required:
      - parameters
      type: object
      properties:
        parameters:
          type: array
          items:
            type: object
            properties: {}
    GetZone:
      type: object
      properties:
        actions:
          type: object
          properties: {}
          description: ""
          example: {}
        created_by:
          type: string
          description: The url to the description of the type of this position
        created_by_id:
          type: string
          description: The global id of the user who created this entry
        direction:
          type: number
          description: Direction of one way area
          format: float
        guid:
          type: string
          description: The global id unique across robots that identifies this area
        map:
          type: string
          description: The url to the map this area belongs to
        map_id:
          type: string
          description: The id of the map this area belongs to
        name:
          type: string
          description: A name associated with this area
        polygon:
          type: array
          description: The list of coordinates in the area polygon
          items:
            type: object
            properties: {}
            example: {}
        shape_type:
          type: string
          description: The type of the area shape
        stroke_width:
          type: number
          description: Width of stroke if shape type is stroke
          format: float
        type_id:
          type: integer
          description: The type of area
      example:
        stroke_width: 6.0274563
        polygon:
        - {}
        - {}
        map_id: map_id
        type_id: 1
        name: name
        guid: guid
        shape_type: shape_type
        created_by_id: created_by_id
        actions: {}
        created_by: created_by
        map: map
        direction: 0.8008282
    GetZone_action_definition:
      type: object
      properties:
        action_type:
          type: string
          description: A name associated with this area action
        action_type_id:
          type: integer
          description: The type of area action
        help:
          type: string
          description: A description of this action
        limit:
          type: integer
          description: The amount of actions of this type we can add.
        name:
          type: string
          description: A nice name associated with this area action
        parameters:
          type: string
      example:
        action_type_id: 0
        help: help
        action_type: action_type
        limit: 6
        name: name
        parameters: parameters
    GetZone_action_definitions:
      type: object
      properties:
        action_type:
          type: string
          description: A name associated with this area action
        action_type_id:
          type: integer
          description: The type of area action
        help:
          type: string
          description: A description of this action
        limit:
          type: integer
          description: The amount of actions of this type we can add.
        name:
          type: string
          description: A nice name associated with this area action
        parameters:
          type: string
      example:
        action_type_id: 0
        help: help
        action_type: action_type
        limit: 6
        name: name
        parameters: parameters
    GetZones:
      type: object
      properties:
        guid:
          type: string
          description: The global id unique across robots that identifies this area
        map:
          type: string
          description: The url to the map this area belongs to
        name:
          type: string
          description: A name associated with this area
        type_id:
          type: integer
          description: The type of area
        url:
          type: string
          description: The URL of the resource
      example:
        type_id: 0
        name: name
        guid: guid
        map: map
        url: url
    GetZones_definitions:
      type: object
      properties:
        actions:
          type: string
        color:
          type: string
          description: The color associated with this area
        direction:
          type: string
        id:
          type: integer
          description: The type of area
        image:
          type: string
          description: ""
        name:
          type: string
          description: A nice name associated with this area action
        shape_types:
          type: string
        stroke_width:
          type: string
      example:
        image: image
        stroke_width: stroke_width
        color: color
        name: name
        shape_types: shape_types
        id: 0
        actions: actions
        direction: direction
    PostCart_calibrations:
      required:
      - drive_height
      - entry_height
      - lock_height
      - name
      - qw
      - qx
      - qy
      - qz
      - standard
      - x
      - "y"
      - z
      type: object
      properties:
        created_by_id:
          type: string
        drive_height:
          type: integer
          format: float
        entry_height:
          type: integer
          format: float
        guid:
          type: string
        lock_height:
          type: integer
          format: float
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        qw:
          type: number
          format: float
        qx:
          type: number
          format: float
        qy:
          type: number
          format: float
        qz:
          type: number
          format: float
        standard:
          type: boolean
        x:
          type: number
          format: float
        "y":
          type: number
          format: float
        z:
          type: number
          format: float
    PostCart_types:
      required:
      - height
      - length
      - name
      - offset_locked_wheels
      - width
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        height:
          type: number
          format: float
        length:
          type: number
          format: float
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        offset_locked_wheels:
          type: number
          format: float
        width:
          type: number
          format: float
    PostCarts:
      required:
      - cart_calibration_id
      - cart_type_id
      - name
      type: object
      properties:
        cart_calibration_id:
          type: string
        cart_type_id:
          type: string
        created_by_id:
          type: string
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
    PostCert:
      required:
      - cert_key_file
      - cert_pem_file
      type: object
      properties:
        cert_key_file:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        cert_pem_file:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    PostDashboard_widgets:
      required:
      - dashboard_id
      type: object
      properties:
        dashboard_id:
          type: string
          description: ""
        guid:
          type: string
        settings:
          type: string
          description: ""
    PostDashboards:
      required:
      - name
      type: object
      properties:
        created_by_id:
          type: string
        fleet_dashboard:
          type: boolean
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 128"
    PostDocking_offsets:
      required:
      - name
      - orientation_offset
      - x_offset
      - y_offset
      type: object
      properties:
        created_by_id:
          type: string
        docking_type:
          type: integer
          format: float
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 255"
        orientation_offset:
          type: number
          format: float
        pos_id:
          type: string
        x_offset:
          type: number
          format: float
        y_offset:
          type: number
          format: float
    PostElevator_floors:
      required:
      - door
      - elevator_entry_pos_guid
      - elevator_guid
      - elevator_pos_guid
      - floor
      - map_guid
      type: object
      properties:
        created_by_id:
          type: string
        door:
          type: integer
          format: float
        elevator_entry_pos_guid:
          type: string
        elevator_guid:
          type: string
        elevator_pos_guid:
          type: string
        entry_mission_guid:
          type: string
        exit_mission_guid:
          type: string
        floor:
          type: integer
          format: float
        guid:
          type: string
        map_guid:
          type: string
    PostElevators:
      required:
      - driver
      - ip
      - name
      - session_guid
      type: object
      properties:
        active:
          type: boolean
        authentication:
          type: string
          description: ""
        created_by_id:
          type: string
        driver:
          type: string
          description: ""
        elevator_namespace:
          type: string
          description: ""
        guid:
          type: string
        ip:
          type: string
        name:
          type: string
          description: ""
        one_way:
          type: integer
          format: float
        password:
          type: string
          description: ""
        port:
          type: integer
          format: float
        security_policy:
          type: string
          description: ""
        session_guid:
          type: string
        turn_in_place:
          type: boolean
        username:
          type: string
          description: ""
    PostError_reports:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: "Min length: 1, Max length: 255"
    PostFactory_reset:
      required:
      - file
      type: object
      properties:
        file:
          type: string
    PostFootprints:
      required:
      - config_id
      - footprint_points
      - height
      - hook
      - name
      type: object
      properties:
        config_id:
          type: string
          description: ""
        created_by_id:
          type: string
        footprint_points:
          type: string
          description: ""
        guid:
          type: string
        height:
          type: number
          format: float
        hook:
          type: boolean
        name:
          type: string
          description: "Min length: 1, Max length: 255"
    PostHook_software_interface:
      required:
      - upgrade
      type: object
      properties:
        upgrade:
          type: boolean
    PostHw_config_import:
      required:
      - file
      type: object
      properties:
        file:
          type: string
    PostIo_module_status:
      type: object
    PostIo_modules:
      required:
      - address
      - name
      type: object
      properties:
        address:
          type: string
          description: ""
        created_by_id:
          type: string
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 255"
        num_inputs:
          type: integer
          format: float
        num_outputs:
          type: integer
          format: float
        type:
          type: string
          description: ""
    PostMap_upload:
      required:
      - type
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        image_data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        start_map_guid:
          type: string
        start_map_theta:
          type: number
          format: float
        start_map_x:
          type: number
          format: float
        start_map_y:
          type: number
          format: float
        type:
          type: string
          description: ""
    PostMap_uploads:
      required:
      - type
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        image_data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        start_map_guid:
          type: string
        start_map_theta:
          type: number
          format: float
        start_map_x:
          type: number
          format: float
        start_map_y:
          type: number
          format: float
        type:
          type: string
          description: ""
    PostMaps:
      required:
      - name
      - origin_theta
      - origin_x
      - origin_y
      - resolution
      - session_id
      type: object
      properties:
        base_map:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        created_by_id:
          type: string
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        origin_theta:
          type: number
          format: float
        origin_x:
          type: number
          format: float
        origin_y:
          type: number
          format: float
        resolution:
          type: number
          format: float
        session_id:
          type: string
    PostMission_actions:
      required:
      - action_type
      - mission_id
      - parameters
      - priority
      type: object
      properties:
        action_type:
          type: string
          description: "Min length: 1, Max length: 255"
        guid:
          type: string
        mission_id:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/PostMission_action_parameters'
        priority:
          type: integer
          format: float
        scope_reference:
          type: string
    PostMission_action_parameters:
      required:
      - id
      - value
      type: object
      properties:
        guid:
          type: string
          description: TBD
        id:
          type: string
        input_name:
          type: string
        value:
          type: object
          description: "Can be null, string, int, or float. depending on 'id'"
    PostMission_groups:
      required:
      - feature
      - icon
      - name
      - priority
      type: object
      properties:
        created_by_id:
          type: string
        feature:
          type: string
          description: "Min length: 1, Max length: 63"
        guid:
          type: string
        icon:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        name:
          type: string
          description: "Min length: 1, Max length: 63"
        priority:
          type: integer
          format: float
    PostMission_queues:
      required:
      - mission_id
      type: object
      properties:
        description:
          type: string
          description: "Max length: 200"
        fleet_schedule_guid:
          type: string
          description: "Max length: 36"
        message:
          type: string
          description: "Max length: 200"
        mission_id:
          type: string
        parameters:
          type: array
          items:
            type: object
            properties: {}
        priority:
          type: integer
          format: float
    PostMissions:
      required:
      - group_id
      - name
      type: object
      properties:
        created_by_id:
          type: string
        description:
          type: string
          description: "Max length: 255"
        group_id:
          type: string
        guid:
          type: string
        hidden:
          type: boolean
        name:
          type: string
          description: "Min length: 1, Max length: 255"
        session_id:
          type: string
    PostModbus_missions:
      required:
      - coil_id
      - mission_id
      - name
      type: object
      properties:
        coil_id:
          type: integer
          format: float
        created_by_id:
          type: string
        guid:
          type: string
        mission_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 200"
        parameters:
          type: array
          items:
            type: object
            properties: {}
    PostPath_guide_positions:
      required:
      - path_guide_guid
      - pos_guid
      - pos_type
      type: object
      properties:
        guid:
          type: string
        path_guide_guid:
          type: string
        pos_guid:
          type: string
        pos_type:
          type: string
          description: ""
        priority:
          type: integer
          format: float
    PostPath_guides:
      required:
      - map_id
      - name
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        map_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 128"
    PostPath_guides_positions:
      required:
      - path_guide_guid
      - pos_guid
      - pos_type
      type: object
      properties:
        guid:
          type: string
        path_guide_guid:
          type: string
        pos_guid:
          type: string
        pos_type:
          type: string
          description: ""
        priority:
          type: integer
          format: float
    PostPath_guides_precalc:
      required:
      - command
      - guid
      type: object
      properties:
        command:
          type: string
          description: ""
        guid:
          type: string
    PostPaths:
      required:
      - autogenerated
      - footprint
      - goal_pos_id
      - last_used
      - length
      - map_crc
      - path
      - start_pos_id
      - time
      - valid
      type: object
      properties:
        autogenerated:
          type: boolean
        footprint:
          type: string
          description: "Max length: 255"
        goal_pos_id:
          type: string
        guid:
          type: string
        last_used:
          type: string
          format: date-time
        length:
          type: number
          format: float
        map_crc:
          type: string
          description: "Min length: 32, Max length: 32"
        path:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        start_pos_id:
          type: string
        time:
          type: number
          format: float
        valid:
          type: boolean
    PostPermissions:
      required:
      - endpoint
      - permission_type
      - user_group_guid
      type: object
      properties:
        endpoint:
          type: string
          description: "Min length: 1, Max length: 255"
        guid:
          type: string
        permission_type:
          type: string
          description: ""
        user_group_guid:
          type: string
    PostPosition_transition_lists:
      required:
      - goal_pos_id
      - mission_id
      - start_pos_id
      type: object
      properties:
        created_by_id:
          type: string
        goal_pos_id:
          type: string
        guid:
          type: string
        mission_id:
          type: string
        start_pos_id:
          type: string
    PostPositions:
      required:
      - map_id
      - name
      - orientation
      - pos_x
      - pos_y
      - type_id
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        map_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        orientation:
          type: number
          format: float
        parent_id:
          type: string
        pos_x:
          type: number
          format: float
        pos_y:
          type: number
          format: float
        type_id:
          type: integer
          format: float
    PostRegister:
      required:
      - value
      type: object
      properties:
        label:
          type: string
          description: "Max length: 50"
        value:
          type: number
          format: float
    PostRobots:
      required:
      - robots
      type: object
      properties:
        robots:
          type: array
          items:
            type: object
            properties: {}
    PostService_books:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: "Min length: 1, Max length: 2056"
        guid:
          type: string
    PostSession_import:
      required:
      - file
      type: object
      properties:
        file:
          type: string
    PostSessions:
      required:
      - name
      type: object
      properties:
        created_by_id:
          type: string
        description:
          type: string
          description: "Max length: 255"
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
    PostSounds:
      required:
      - name
      - sound
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        note:
          type: string
          description: "Max length: 255"
        sound:
          type: string
          format: binary
        volume:
          type: integer
          format: float
    PostTimezone:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: ""
    PostUser_group_permission:
      required:
      - endpoint
      - permission_type
      - user_group_guid
      type: object
      properties:
        endpoint:
          type: string
          description: "Min length: 1, Max length: 255"
        guid:
          type: string
        permission_type:
          type: string
          description: ""
        user_group_guid:
          type: string
    PostUser_groups:
      required:
      - name
      type: object
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        name:
          type: string
          description: "Min length: 2, Max length: 255"
        session_expiration_enabled:
          type: boolean
        session_timeout:
          type: integer
          format: float
    PostUsers:
      required:
      - name
      - password
      - user_group_id
      - username
      type: object
      properties:
        created_by_id:
          type: string
        dashboard_id:
          type: string
        email:
          type: string
        guid:
          type: string
        name:
          type: string
          description: "Min length: 2, Max length: 255"
        password:
          type: string
        pincode:
          type: string
        single_dashboard:
          type: boolean
        user_group_id:
          type: string
        username:
          type: string
          description: "Min length: 2, Max length: 63"
    PostWifi_connection:
      required:
      - ssid
      type: object
      properties:
        address:
          type: string
        bgscan_long_interval:
          type: integer
          format: float
        bgscan_short_interval:
          type: integer
          format: float
        bgscan_threshold:
          type: integer
          format: float
        description:
          type: string
          description: ""
        device:
          type: string
          description: ""
        dns:
          type: string
        gateway:
          type: string
        netmask:
          type: string
        scan_freqs:
          type: array
          items:
            type: object
            properties: {}
        security:
          type: string
          description: ""
        ssid:
          type: string
          description: ""
    PostWifi_connections:
      required:
      - ssid
      type: object
      properties:
        address:
          type: string
        bgscan_long_interval:
          type: integer
          format: float
        bgscan_short_interval:
          type: integer
          format: float
        bgscan_threshold:
          type: integer
          format: float
        description:
          type: string
          description: ""
        device:
          type: string
          description: ""
        dns:
          type: string
        gateway:
          type: string
        netmask:
          type: string
        scan_freqs:
          type: array
          items:
            type: object
            properties: {}
        security:
          type: string
          description: ""
        ssid:
          type: string
          description: ""
    PostWorld_model:
      required:
      - enable_resource_tracking
      - robot_ip
      - world_model
      type: object
      properties:
        enable_resource_tracking:
          type: boolean
        fleet_id:
          type: string
        robot_ip:
          type: string
        world_model:
          type: array
          items:
            type: object
            properties: {}
    PostZones:
      required:
      - map_id
      - polygon
      - type_id
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
            properties: {}
        created_by_id:
          type: string
        direction:
          type: number
          format: float
        guid:
          type: string
        map_id:
          type: string
        name:
          type: string
          description: "Max length: 255"
        polygon:
          type: array
          items:
            type: object
            properties: {}
        shape_type:
          type: string
          description: ""
        stroke_width:
          type: number
          format: float
        type_id:
          type: integer
          format: float
    PutCart:
      type: object
      properties:
        cart_calibration_id:
          type: string
        cart_type_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
    PutCart_calibration:
      type: object
      properties:
        drive_height:
          type: integer
          format: float
        entry_height:
          type: integer
          format: float
        lock_height:
          type: integer
          format: float
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        qw:
          type: number
          format: float
        qx:
          type: number
          format: float
        qy:
          type: number
          format: float
        qz:
          type: number
          format: float
        standard:
          type: boolean
        x:
          type: number
          format: float
        "y":
          type: number
          format: float
        z:
          type: number
          format: float
    PutCart_type:
      type: object
      properties:
        height:
          type: number
          format: float
        length:
          type: number
          format: float
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        offset_locked_wheels:
          type: number
          format: float
        width:
          type: number
          format: float
    PutDashboard:
      type: object
      properties:
        name:
          type: string
          description: "Min length: 1, Max length: 128"
    PutDashboard_widget:
      type: object
      properties:
        settings:
          type: string
          description: ""
    PutDocking_offset:
      type: object
      properties:
        name:
          type: string
          description: "Min length: 1, Max length: 255"
        orientation_offset:
          type: number
          format: float
        x_offset:
          type: number
          format: float
        y_offset:
          type: number
          format: float
    PutElevator:
      type: object
      properties:
        active:
          type: boolean
        authentication:
          type: string
          description: "Choices are: {\"Anonymous\", \"Username\", \"Certificate\"\
            }"
        driver:
          type: string
          description: "Choices are: {\"Hitachi\", \"OPC_UA\"}"
        elevator_namespace:
          type: string
          description: ""
        ip:
          type: string
        name:
          type: string
          description: ""
        one_way:
          type: integer
          format: float
        password:
          type: string
          description: ""
        port:
          type: integer
          format: float
        session_guid:
          type: string
        turn_in_place:
          type: boolean
        username:
          type: string
          description: ""
    PutElevator_floor:
      type: object
      properties:
        door:
          type: integer
          format: float
        elevator_entry_pos_guid:
          type: string
        elevator_guid:
          type: string
        elevator_pos_guid:
          type: string
        entry_mission_guid:
          type: string
        exit_mission_guid:
          type: string
        floor:
          type: integer
          format: float
        map_guid:
          type: string
    PutFootprint:
      type: object
      properties:
        config_id:
          type: string
          description: "Choices are: {\"MIR500-1000\", \"MIR600-1350\", \"MIR100-200\"\
            , \"MIR250\", \"MIR125\", \"UNKNOWN\"}"
        footprint_points:
          type: string
          description: ""
        height:
          type: number
          format: float
        hook:
          type: boolean
        name:
          type: string
          description: "Min length: 1, Max length: 255"
    PutHook_brake:
      type: object
      properties:
        state:
          type: integer
          description: "Choices are: {0, 1}"
          format: float
    PutHook_gripper:
      type: object
      properties:
        state:
          type: integer
          description: "Choices are: {0, 1}"
          format: float
    PutHook_height:
      type: object
      properties:
        height:
          type: integer
          format: float
        home:
          type: boolean
    PutIo_module:
      type: object
      properties:
        address:
          type: string
          description: ""
        name:
          type: string
          description: "Min length: 1, Max length: 255"
        num_inputs:
          type: integer
          format: float
        num_outputs:
          type: integer
          format: float
        type:
          type: string
          description: "Choices are: {\"wise\"}"
    PutIo_module_status:
      type: object
      properties:
        "on":
          type: boolean
        port:
          type: integer
          format: float
        timeout:
          type: integer
          format: float
    PutMap:
      type: object
      properties:
        base_map:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        origin_theta:
          type: number
          format: float
        origin_x:
          type: number
          format: float
        origin_y:
          type: number
          format: float
        resolution:
          type: number
          format: float
    PutMap_record:
      type: object
      properties:
        command:
          type: string
          description: "Choices are: {\"start\", \"stop\", \"finalize\"}"
    PutMe:
      type: object
      properties:
        dashboard_id:
          type: string
        email:
          type: string
        name:
          type: string
          description: "Min length: 2, Max length: 255"
        password:
          type: string
        pincode:
          type: string
        single_dashboard:
          type: boolean
        user_group_id:
          type: string
        username:
          type: string
          description: "Min length: 2, Max length: 63"
    PutMission:
      type: object
      properties:
        description:
          type: string
          description: "Max length: 255"
        group_id:
          type: string
        hidden:
          type: boolean
        name:
          type: string
          description: "Min length: 1, Max length: 255"
        session_id:
          type: string
    PutMission_action:
      type: object
      properties:
        parameters:
          type: array
          items:
            type: object
            properties: {}
        priority:
          type: integer
          format: float
        scope_reference:
          type: string
    PutMission_group:
      type: object
      properties:
        feature:
          type: string
          description: "Min length: 1, Max length: 63"
        icon:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        name:
          type: string
          description: "Min length: 1, Max length: 63"
        priority:
          type: integer
          format: float
    PutMission_queue:
      type: object
      properties:
        cmd:
          type: integer
          format: float
        mission_id:
          type: string
        priority:
          type: integer
          format: float
    PutModbus_mission:
      type: object
      properties:
        coil_id:
          type: integer
          format: float
        mission_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 200"
        parameters:
          type: array
          items:
            type: object
            properties: {}
    PutPath:
      type: object
      properties:
        autogenerated:
          type: boolean
        footprint:
          type: string
          description: "Max length: 255"
        goal_pos_id:
          type: string
        last_used:
          type: string
          format: date-time
        length:
          type: number
          format: float
        map_crc:
          type: string
          description: "Min length: 32, Max length: 32"
        path:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        start_pos_id:
          type: string
        time:
          type: number
          format: float
        valid:
          type: boolean
    PutPath_guide:
      type: object
      properties:
        map_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 128"
    PutPath_guide_position:
      type: object
      properties:
        pos_guid:
          type: string
        priority:
          type: integer
          format: float
    PutPath_guides_position:
      type: object
      properties:
        pos_guid:
          type: string
        priority:
          type: integer
          format: float
    PutPosition:
      type: object
      properties:
        map_id:
          type: string
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        orientation:
          type: number
          format: float
        parent_id:
          type: string
        pos_x:
          type: number
          format: float
        pos_y:
          type: number
          format: float
        type_id:
          type: integer
          format: float
    PutPosition_transition_list:
      type: object
      properties:
        goal_pos_id:
          type: string
        mission_id:
          type: string
        start_pos_id:
          type: string
    PutRemote_support:
      type: object
      properties:
        connection_countdown:
          type: number
          format: float
    PutSession:
      type: object
      properties:
        active:
          type: boolean
        description:
          type: string
          description: "Max length: 255"
        name:
          type: string
          description: "Min length: 1, Max length: 40"
    PutSetting:
      type: object
      properties:
        value:
          type: string
          description: "Max length: 700"
    PutSetting_advanced:
      type: object
      properties:
        value:
          type: string
          description: "Max length: 700"
    PutSetup_cameras:
      type: object
      properties:
        camera_model:
          type: string
          description: "Max length: 20"
        camera_position:
          type: string
          description: "Max length: 20"
        operation:
          type: string
          description: "Max length: 20"
    PutSetup_external_interface_serials:
      type: object
      properties:
        operation:
          type: string
          description: "Max length: 20"
        value:
          type: string
          description: "Max length: 20"
    PutSetup_laser_serials:
      type: object
      properties:
        back_laser_serial:
          type: string
          description: "Max length: 20"
        front_laser_serial:
          type: string
          description: "Max length: 20"
        operation:
          type: string
          description: "Max length: 20"
    PutSetup_mc_serials:
      type: object
      properties:
        operation:
          type: string
          description: "Max length: 20"
        value:
          type: string
          description: "Max length: 20"
    PutSound:
      type: object
      properties:
        name:
          type: string
          description: "Min length: 1, Max length: 40"
        note:
          type: string
          description: "Max length: 255"
        sound:
          type: string
          format: binary
        volume:
          type: integer
          format: float
    PutStatus:
      type: object
      properties:
        answer:
          type: string
          description: "Min length: 1, Max length: 255"
        clear_error:
          type: boolean
          description: "Choices are: {True}"
        datetime:
          type: string
          description: Do not set datetime via API as this will reboot the robot
          format: yyyyMMddTHH:mm:ss
        guid:
          type: string
        map_id:
          type: string
        mode_id:
          type: integer
          description: "Choices are: {3, 7}"
          format: float
        name:
          type: string
          description: "Min length: 1, Max length: 20"
        position:
          type: object
          properties: {}
        serial_number:
          type: string
        state_id:
          type: integer
          description: "Choices are: {3, 4, 11}, State: {Ready, Pause, Manualcontrol}"
          format: float
        web_session_id:
          type: string
          description: ""
    PutUser:
      type: object
      properties:
        dashboard_id:
          type: string
        email:
          type: string
        name:
          type: string
          description: "Min length: 2, Max length: 255"
        password:
          type: string
        pincode:
          type: string
        single_dashboard:
          type: boolean
        user_group_id:
          type: string
        username:
          type: string
          description: "Min length: 2, Max length: 63"
    PutUser_group:
      type: object
      properties:
        name:
          type: string
          description: "Min length: 2, Max length: 255"
        session_expiration_enabled:
          type: boolean
        session_timeout:
          type: integer
          format: float
    PutZone:
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
            properties: {}
        direction:
          type: number
          format: float
        name:
          type: string
          description: "Max length: 255"
        polygon:
          type: array
          items:
            type: object
            properties: {}
        stroke_width:
          type: number
          format: float
    GetHook_brake_1:
      type: object
      properties:
        braked:
          type: boolean
          description: Whether the hook brake is activated or not
        state:
          type: integer
          description: The state of the hook brake in machine format
        state_string:
          type: string
          description: The state of the hook brake in human format
      description: ""
      example:
        braked: true
        state: 6
        state_string: state_string
    GetHook_gripper_1:
      type: object
      properties:
        closed:
          type: boolean
          description: Whether the hook gripper is closed or not
        state:
          type: integer
          description: The state of the hook gripper in machine format
        state_string:
          type: string
          description: The state of the hook gripper in human format
      description: ""
      example:
        closed: true
        state: 1
        state_string: state_string
    GetHook_height_1:
      type: object
      properties:
        height:
          type: number
          description: The height of the hook in mm
          format: float
        state:
          type: integer
          description: The state of the hook height control in machine format
        state_string:
          type: string
          description: The state of the hook height control in human format
      description: ""
      example:
        state: 5
        height: 5.962134
        state_string: state_string
    Help_parameter_constraints_body:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
      description: ""
      example: null
    GetPath_guide_options_goals:
      type: object
      properties:
        name:
          type: string
          description: The name of the position
        pos_guid:
          type: string
          description: The global unique id across robots that identifies this position
      description: ""
      example:
        name: name
        pos_guid: pos_guid
    GetSick_config_supported_software_version:
      type: object
      properties:
        from:
          type: string
          description: ""
        to:
          type: string
          description: ""
      description: ""
      example:
        from: from
        to: to
    GetStatus_errors:
      type: object
      properties:
        code:
          type: integer
          description: The error code
        description:
          type: string
          description: Description of the error
        module:
          type: string
          description: The module reporting the error
        non_resettable:
          type: boolean
          description: The error cannot be reset from ui
      description: ""
      example:
        code: 5
        non_resettable: true
        module: module
        description: description
    GetStatus_hook_data_angle:
      type: object
      properties:
        angle:
          type: number
          description: Angle of the hook in degrees.
          format: float
      description: ""
      example:
        angle: 5.637377
    GetStatus_hook_data:
      type: object
      properties:
        angle:
          $ref: '#/components/schemas/GetStatus_hook_data_angle'
        height:
          type: number
          description: Height of the hook measured from the ground in mm.
          format: float
        length:
          type: number
          description: Length of the hook in meters.
          format: float
      description: ""
      example:
        length: 7.0614014
        angle:
          angle: 5.637377
        height: 2.302136
    GetStatus_hook_status_cart:
      type: object
      properties:
        height:
          type: number
          description: The height of the attached trolley
          format: float
        id:
          type: number
          description: The id of the attached trolley
          format: float
        length:
          type: number
          description: The length of the attached trolley
          format: float
        offset_locked_wheels:
          type: number
          description: The distance from front of the attached trolley to the locked
            wheels
          format: float
        width:
          type: number
          description: The width of the attached trolley
          format: float
      description: ""
      example:
        offset_locked_wheels: 4.145608
        length: 2.027123
        width: 7.386282
        id: 3.6160767
        height: 9.301444
    GetStatus_hook_status:
      type: object
      properties:
        available:
          type: boolean
          description: Boolean indicating if the hook available on this robot
        cart:
          $ref: '#/components/schemas/GetStatus_hook_status_cart'
        cart_attached:
          type: boolean
          description: Boolean indicating if a trolley is currently attached
      description: ""
      example:
        available: true
        cart_attached: true
        cart:
          offset_locked_wheels: 4.145608
          length: 2.027123
          width: 7.386282
          id: 3.6160767
          height: 9.301444
    GetStatus_position:
      type: object
      properties:
        orientation:
          type: number
          description: The orientation of the current position of the robot
          format: float
        x:
          type: number
          description: The x-coordinate of the current position of the robot
          format: float
        "y":
          type: number
          description: The y-coordinate of the current position of the robot
          format: float
      description: ""
      example:
        orientation: 6.846853
        x: 7.4577446
        "y": 1.1730742
    GetStatus_user_prompt:
      type: object
      properties:
        guid:
          type: string
          description: ""
        options:
          type: array
          description: ""
          items:
            type: string
            description: ""
        question:
          type: string
          description: ""
        timeout:
          type: number
          description: ""
          format: float
        user_group:
          type: string
          description: ""
      description: ""
      example:
        user_group: user_group
        question: question
        options:
        - options
        - options
        guid: guid
        timeout: 9.965781
    GetStatus_velocity:
      type: object
      properties:
        angular:
          type: number
          description: The angular speed of the robot in degrees/s
          format: float
        linear:
          type: number
          description: The linear speed of the robot in m/s
          format: float
      description: ""
      example:
        angular: 9.36931
        linear: 6.6835623
  parameters:
    authorization:
      name: Authorization
      in: header
      description: Authorization header
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
    language:
      name: Accept-Language
      in: header
      description: Language header
      required: true
      style: simple
      explode: false
      schema:
        type: string
        default: en_US
        enum:
        - en_US
        - de_DE
        - es_ES
        - da_DK
        - zh_CN
  securitySchemes:
    Basic:
      type: http
      description: "To authenticate in the API a basic autentication has to be included\
        \ in the header.\n        It consists in a string that is base64 encoded and\
        \ it is formed by the username followed by a colon and the password sha-256\
        \ encoded.\n        Ex: BASE64( <username>:SHA-256( <password> ) )\n     \
        \   \nAn example header would look like this:\n\n        Content-Type:application/json\n\
        \n        authorization:Basic ZGlzdHJpYnV0b3I6NjJmMmYwZjFlZmYxMGQzMTUyYzk1ZjZmMDU5NjU3NmU0ODJiYjhlNDQ4MDY0MzNmNGNmOTI5NzkyODM0YjAxNA==\n\
        \n        \nSHA-256 encoder http://www.xorbin.com/tools/sha256-hash-calculator\n\
        \        \nBase64 encoded https://www.base64encode.org/"
      scheme: basic
      x-basicInfoFunc: mir_robot_server.controllers.authorization_controller.check_Basic
x-original-swagger-version: "2.0"

